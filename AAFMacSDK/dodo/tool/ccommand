#
# Script: ccommand
# proxy for unix exec command.
#

#
# This variable will contain program name to execute.
set programName ""


if "{1}" == ""
	echo "# exec needs at least one argument that represents to aaf program to execute."
	exit 1
end if

set programName "{1}"
shift

# Preserve the old obsolete arg file if present.
if "`exists -f "{programName}.arg"`" ­ ""
	Rename -y "{programName}.arg" "{programName}.arg1"
end if

# Preserve the old obsolete inp file if present.
if "`exists -f "{programName}.inp"`" ­ ""
	Rename -y "{programName}.inp" "{programName}.inp1"
end if

# Create the argv file.
echo "{parameters}" > "{programName}.arg"

# Alias that behaves like the SystemTask toolbox routine releases time to the system
# so that Finder and other applications get alittle time to complete processing
# 
alias SystemTask 'Evaluate index = 0;¶
loop;¶
	break if {index} >= 1000;¶
	Evaluate index = {index} + 1;¶
end'


# Release alittle time to the system...
SystemTask

# Call the program and wait until the program quits.
#"{programName}" -background -wait #WARNING: -background option appears to launch a 2nd Finder!!!
"{programName}" -wait

# Release alittle time to the system...
SystemTask

# Copy the output file to stdout
catenate "{programName}.out"

# cleanup temporary files.
rm -f "{programName}.arg" "{programName}.out"


unalias SystemTask