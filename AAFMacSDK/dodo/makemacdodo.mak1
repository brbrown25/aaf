########################################################################
#
# The contents of this file are subject to the AAF SDK Public
# Source License Agreement (the "License"); You may not use this file
# except in compliance with the License.  The License is available in
# AAFSDKPSL.TXT, or you may obtain a copy of the License from the AAF
# Association or its successor.
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
# the License for the specific language governing rights and limitations
# under the License.
#
# The Original Code of this file is Copyright 1998-2001, Licensor of the
# AAF Association.
#
# The Initial Developer of the Original Code of this file and the
# Licensor of the AAF Association is Avid Technology.
# All rights reserved.
#
########################################################################


all Ä "{dod}macdodo.mak1"


MAKEFILE     = makemacdodo.mk



macaafobjects.mk Ä "{dod}aafobjects.mk"
	make -f macaafobjects.make > macaafobjects.make.out
	macaafobjects.make.out


"{dod}macdodo.mak1" Ä macaafobjects.mk 
	rm -f macdodo.tmp
	echo '#' This file automatically generated make. > macdodo.tmp
	echo '#   File:       makemakedodo.mak' >> macdodo.tmp
	echo '#   Target:     dodo generated source files' >> macdodo.tmp
	echo '#   Sources:    all dod files' >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo 'all Ä start dodofiles.txt' >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '# Dependency to show start time' >> macdodo.tmp
	echo 'start Ä $OutOfDate' >> macdodo.tmp
	echo '	''set startingDirectory "`directory`"' >> macdodo.tmp
	echo '	''directory "{dod}"' >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo 'MAKEFILE     = "{MacDodo}macdodo.make"' >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	catenate macaafobjects.mk >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo 'GENERATED_FILES = ¶' > generated_files.tmp
	echo 'PRIVATE_FREFH_DOD = ¶' > private_frefh_dod.tmp
	echo 'FREFH_DOD = ¶' > frefh_dod.tmp
	echo 'PLUGIN_FREFH_DOD = ¶' > plugin_frefh_dod.tmp
	echo 'GENERATED_EXP = ¶' > generated_exp.tmp
	echo 'GENERATED_REFH = ¶' > generated_refh.tmp
	echo 'GENERATED_FREFH = ¶' > generated_frefh.tmp
	echo 'GENERATED_PRIVATE_FREFH = ¶' > generated_private_frefh.tmp
	echo 'GENERATED_COMH = ¶' > generated_comh.tmp
	echo 'GENERATED_COMC = ¶' > generated_comc.tmp
	echo 'GENERATED_COMT = ¶' > generated_comt.tmp
	echo 'GENERATED_IMPL = ¶' > generated_impl.tmp
	echo 'GENERATED_TARGETS = ¶' > generated_targets.tmp
	echo 'PLUGIN_FREFH_TARGETS = ¶' > plugin_frefh_targets.tmp
	echo 'Making build rules and dependencies for API headers and COM sources...'
	echo 'AAFTypes...'
	echo "" >> macdodo.tmp
	echo '	"{dod}AAFTypes.refh" ¶' >> generated_files.tmp
	echo '	"{dod}AAFTypes.refh" ¶' >> generated_refh.tmp
	echo '"{dod}AAFTypes.refh" Ä "{dod}AAFTypes.dod" "{macros}refh.mac" "{macros}base.mac"' >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '	"{refh}AAFTypes.h" ¶' >> generated_files.tmp
	echo '	"{refh}AAFTypes.h" ¶' >> generated_targets.tmp
	echo '"{refh}AAFTypes.h" Ä "{dod}AAFTypes.dod" "{macros}refh.mac" "{macros}base.mac"' >> macdodo.tmp
	echo '	''# Recursively make the intermediate target' >> macdodo.tmp
	echo '	''make "{dod}AAFTypes.refh" -f {MAKEFILE} > "{MacDodo}make.refh.out"' >> macdodo.tmp
	echo '	''"{MacDodo}make.refh.out"' >> macdodo.tmp
	echo '	''copy_if_diff -p "{dod}AAFTypes.refh" "{refh}AAFTypes.h"'  >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '	"{dod}CAAFEnumValidation.h" ¶' >> generated_files.tmp
	echo '	"{dod}CAAFEnumValidation.cpp" ¶' >> generated_files.tmp
	echo '	"{dod}CAAFEnumValidation.log" ¶' >> generated_files.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '	"{comh}CAAFEnumValidation.h" ¶' >> generated_files.tmp
	echo '	"{comc}CAAFEnumValidation.cpp" ¶' >> generated_files.tmp
	echo '	"{comh}CAAFEnumValidation.h" ¶' >> generated_targets.tmp
	echo '	"{comc}CAAFEnumValidation.cpp" ¶' >> generated_targets.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo 'AAFRoot...'
	echo '	"{dod}AAFRoot.exp" ¶' >> generated_files.tmp
	echo '	"{dod}AAFRoot.exp" ¶' >> generated_exp.tmp
	echo "" >> macdodo.tmp
	echo '"{dod}AAFRoot.exp" Ä "{dod}AAFRoot.dod" "{macros}exp.mac" "{macros}base.mac"' >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '	"{dod}AAFRoot.frefh" ¶' >> generated_files.tmp
	echo '	"{dod}AAFRoot.frefh" ¶' >> generated_private_frefh.tmp
	echo '	"{dod}AAFRoot.dod" ¶' >> private_frefh_dod.tmp
	echo "" >> macdodo.tmp
	echo '"{dod}AAFRoot.frefh" Ä "{dod}AAFRoot.dod" "{macros}frefh.mac" "{macros}base.mac"' >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '	"{dod}AAFRoot.comh" ¶' >> generated_files.tmp
	echo '	"{dod}AAFRoot.comh" ¶' >> generated_comh.tmp
	echo "" >> macdodo.tmp
	echo '"{dod}AAFRoot.comh" Ä "{dod}AAFRoot.dod" "{macros}comh.mac" "{macros}base.mac"' >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '	"{comh}CAAFRoot.h" ¶' >> generated_files.tmp
	echo '	"{comh}CAAFRoot.h" ¶' >> generated_targets.tmp
	echo "" >> macdodo.tmp
	echo '"{comh}CAAFRoot.h" Ä "{dod}AAFRoot.dod" "{macros}comh.mac" "{macros}base.mac"' >> macdodo.tmp
	echo '	''make "{dod}AAFRoot.comh" -f {MAKEFILE} > "{MacDodo}make.comh.out"' >> macdodo.tmp
	echo '	''"{MacDodo}make.comh.out"' >> macdodo.tmp
	echo '	''copy_if_diff -p "{dod}AAFRoot.comh" "{comh}CAAFRoot.h"'  >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '	"{dod}AAFRoot.comc" ¶' >> generated_files.tmp
	echo '	"{dod}AAFRoot.comc" ¶' >> generated_comc.tmp
	echo "" >> macdodo.tmp
	echo '"{dod}AAFRoot.comc" Ä "{dod}AAFRoot.dod" "{macros}comc.mac" "{macros}base.mac"' >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '	"{comc}CAAFRoot.cpp" ¶' >> generated_files.tmp
	echo '	"{comc}CAAFRoot.cpp" ¶' >> generated_targets.tmp
	echo "" >> macdodo.tmp
	echo '"{comc}CAAFRoot.cpp" Ä "{dod}AAFRoot.dod" "{macros}comc.mac" "{macros}base.mac"' >> macdodo.tmp
	echo '	''make "{dod}AAFRoot.comc" -f {MAKEFILE} > "{MacDodo}make.comc.out"' >> macdodo.tmp
	echo '	''"{MacDodo}make.comc.out"' >> macdodo.tmp
	echo '	''copy_if_diff -p "{dod}AAFRoot.comc" "{comc}CAAFRoot.cpp"'  >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '	"{dod}AAFRoot.implh" ¶' >> generated_files.tmp
	echo '	"{dod}AAFRoot.implh" ¶' >> generated_impl.tmp
	echo "" >> macdodo.tmp
	echo '"{dod}AAFRoot.implh" Ä "{dod}AAFRoot.dod" "{macros}implh.mac" "{macros}base.mac"' >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '	"{impl}ImplAAFRoot.h" ¶' >> generated_files.tmp
	echo '	"{impl}ImplAAFRoot.h" ¶' >> generated_targets.tmp
	echo "" >> macdodo.tmp
	echo '"{impl}ImplAAFRoot.h" Ä "{dod}AAFRoot.dod" "{macros}implh.mac" "{macros}base.mac"' >> macdodo.tmp
	echo '	''make "{dod}AAFRoot.implh" -f {MAKEFILE} > "{MacDodo}make.implh.out"'  >> macdodo.tmp
	echo '	''"{MacDodo}make.implh.out"'  >> macdodo.tmp
	echo '	''copy_if_diff -p "{dod}AAFRoot.implh" "{impl}ImplAAFRoot.h"'  >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '	"{dod}AAFRoot.implc" ¶' >> generated_files.tmp
	echo '	"{dod}AAFRoot.implc" ¶' >> generated_impl.tmp
	echo "" >> macdodo.tmp
	echo '"{dod}AAFRoot.implc" Ä "{dod}AAFRoot.dod" "{macros}implc.mac" "{macros}base.mac"' >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '	"{impl}ImplAAFRoot.cpp" ¶' >> generated_files.tmp
	echo '	"{impl}ImplAAFRoot.cpp" ¶' >> generated_targets.tmp
	echo "" >> macdodo.tmp
	echo '"{impl}ImplAAFRoot.cpp" Ä "{dod}AAFRoot.dod" "{macros}implc.mac" "{macros}base.mac"' >> macdodo.tmp
	echo '	''make "{dod}AAFRoot.implc" -f {MAKEFILE} > "{MacDodo}make.implc.out"' >> macdodo.tmp
	echo '	''"{MacDodo}make.implc.out"' >> macdodo.tmp
	echo '	''copy_if_diff -p "{dod}AAFRoot.implc" "{impl}ImplAAFRoot.cpp"'  >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '	"{dod}AAF.refh" ¶' >> generated_files.tmp
	echo '	"{dod}AAF.refh" ¶' >> generated_refh.tmp
	echo '	"{refh}AAF.h" ¶' >> generated_files.tmp
	echo '	"{refh}AAF.h" ¶' >> generated_targets.tmp
	echo '	"{dod}AAF_i.refh" ¶' >> generated_files.tmp
	echo '	"{dod}AAF_i.refh" ¶' >> generated_refh.tmp
	echo '	"{refh}AAF_i.c" ¶' >> generated_files.tmp
	echo '	"{refh}AAF_i.c" ¶' >> generated_targets.tmp
	echo '	"{dod}AAFPlugin.refh" ¶' >> generated_files.tmp
	echo '	"{dod}AAFPlugin.refh" ¶' >> generated_refh.tmp
	echo '	"{refh}AAFPlugin.h" ¶' >> generated_files.tmp
	echo '	"{refh}AAFPlugin.h" ¶' >> generated_targets.tmp
	echo '	"{dod}AAFPlugin_i.refh" ¶' >> generated_files.tmp
	echo '	"{dod}AAFPlugin_i.refh" ¶' >> generated_refh.tmp
	echo '	"{refh}AAFPlugin_i.c" ¶' >> generated_files.tmp
	echo '	"{refh}AAFPlugin_i.c" ¶' >> generated_targets.tmp
	echo 'AAFPrivate...'
	echo '	"{dod}AAFPrivate.refh" ¶' >> generated_files.tmp
	echo '	"{dod}AAFPrivate.refh" ¶' >> generated_refh.tmp
	echo '	"{refh}AAFPrivate.h" ¶' >> generated_files.tmp
	echo '	"{refh}AAFPrivate.h" ¶' >> generated_targets.tmp
	echo '	"{dod}AAFPrivate_i.refh" ¶' >> generated_files.tmp
	echo '	"{dod}AAFPrivate_i.refh" ¶' >> generated_refh.tmp
	echo '	"{refh}AAFPrivate_i.c" ¶' >> generated_files.tmp
	echo '	"{refh}AAFPrivate_i.c" ¶' >> generated_targets.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	for base in {PRIVATE_AAFOBJECTS}
		echo {base}'...'
		set imports_exp ""
		set imports_dod ""
		set imports_exp "`Search -q -s -ns -e '/¥#import .¶//' "{dod}{base}.dod" | StreamEdit -e '1,$ Replace /#import[ ]+.\//""'`"
		if "{imports_exp}" ­ ""
			#echo '	imports_exp '{imports_exp}
			set imports_dod "`echo {imports_exp} | StreamEdit -e '1,$ Replace /.exp/".dod" -c °'`"
		end
		for item in {imports_exp}
			echo -n '"{dod}'{item}'" '
		end > "{MacDodo}imports_exp"
		for item in {imports_dod}
			echo -n '"{dod}'{item}'" '
		end > "{MacDodo}imports_dod"
		echo '	"{dod}'{base}'.exp" ¶' >> generated_files.tmp
		echo '	"{dod}'{base}'.exp" ¶' >> generated_exp.tmp
		echo "" >> macdodo.tmp
		echo -n '"{dod}'{base}'.exp" Ä "{dod}'{base}'.dod" "{macros}exp.mac" "{macros}base.mac" ' >> macdodo.tmp
		catenate "{MacDodo}imports_exp" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo '	"{frefh}'{base}'.frefh" ¶' >> generated_files.tmp
		echo '	"{frefh}'{base}'.frefh" ¶' >> generated_private_frefh.tmp
		echo '	"{dod}'{base}'.dod" ¶' >> private_frefh_dod.tmp
		echo -n '"{frefh}'{base}'.frefh" Ä "{dod}'{base}'.dod" "{macros}frefh.mac" "{macros}base.mac" ' >> macdodo.tmp
		catenate "{MacDodo}imports_exp" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo '	"{dod}'{base}'.comh" ¶' >> generated_files.tmp
		echo '	"{dod}'{base}'.comh" ¶' >> generated_comh.tmp
		echo "" >> macdodo.tmp
		echo -n '"{dod}'{base}'.comh" Ä "{dod}'{base}'.dod" "{macros}comh.mac" "{macros}base.mac" '>> macdodo.tmp
		catenate "{MacDodo}imports_exp" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo '	"{comh}C'{base}'.h" ¶' >> generated_files.tmp
		echo '	"{comh}C'{base}'.h" ¶' >> generated_targets.tmp
		echo "" >> macdodo.tmp
		echo -n '"{comh}C'{base}'.h" Ä "{dod}'{base}'.dod" "{macros}comh.mac" "{macros}base.mac" ' >> macdodo.tmp
		catenate "{MacDodo}imports_dod" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo '	''make "{dod}'{base}'.comh" -f {MAKEFILE} > "{MacDodo}make.comh.out"' >> macdodo.tmp
		echo '	''"{MacDodo}make.comh.out"' >> macdodo.tmp
		echo '	''copy_if_diff -p "{dod}'{base}'.comh" "{comh}C'{base}'.h"'  >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo '	"{dod}'{base}'.comc" ¶' >> generated_files.tmp
		echo '	"{dod}'{base}'.comc" ¶' >> generated_comc.tmp
		echo "" >> macdodo.tmp
		echo -n '"{dod}'{base}'.comc" Ä "{dod}'{base}'.dod" "{macros}comc.mac" "{macros}base.mac" ' >> macdodo.tmp
		catenate "{MacDodo}imports_exp" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo '	"{comc}C'{base}'.cpp" ¶' >> generated_files.tmp
		echo '	"{comc}C'{base}'.cpp" ¶' >> generated_targets.tmp
		echo "" >> macdodo.tmp
		echo -n '"{comc}C'{base}'.cpp" Ä "{dod}'{base}'.dod" "{macros}comc.mac" "{macros}base.mac" ' >> macdodo.tmp
		catenate "{MacDodo}imports_dod" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo '	''make "{dod}'{base}'.comc" -f {MAKEFILE} > "{MacDodo}make.comc.out"' >> macdodo.tmp
		echo '	''"{MacDodo}make.comc.out"' >> macdodo.tmp
		echo '	''copy_if_diff -p "{dod}'{base}'.comc" "{comc}C'{base}'.cpp"'  >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo "" >> macdodo.tmp
	end
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	for base in {AAFOBJECTS}
		echo {base}'...'
		set humanTyped ""
		for typed in {HUMAN_TYPED_IMPL}
			if {typed} == {base}
				set humanTyped "{typed}"
				break
			end
		end
		set imports_exp ""
		set imports_dod ""
		set imports_exp "`Search -q -s -ns -e '/¥#import .¶//' "{dod}{base}.dod" | StreamEdit -e '1,$ Replace /#import[ ]+.\//""'`"
		if "{imports_exp}" ­ ""
			#echo '	imports_exp '{imports_exp}
			set imports_dod "`echo {imports_exp} | StreamEdit -e '1,$ Replace /.exp/".dod" -c °'`"
		end
		for item in {imports_exp}
			echo -n '"{dod}'{item}'" '
		end > "{MacDodo}imports_exp"
		for item in {imports_dod}
			echo -n '"{dod}'{item}'" '
		end > "{MacDodo}imports_dod"
		echo '	"{dod}'{base}'.exp" ¶' >> generated_files.tmp
		echo '	"{dod}'{base}'.exp" ¶' >> generated_exp.tmp
		echo "" >> macdodo.tmp
		echo -n '"{dod}'{base}'.exp" Ä "{dod}'{base}'.dod" "{macros}exp.mac" "{macros}base.mac" ' >> macdodo.tmp
		catenate "{MacDodo}imports_exp" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo '	"{dod}'{base}'.dod" ¶' >> frefh_dod.tmp
		echo '	"{frefh}'{base}'.frefh" ¶' >> generated_files.tmp
		echo '	"{frefh}'{base}'.frefh" ¶' >> generated_frefh.tmp
		echo -n '"{frefh}'{base}'.frefh" Ä "{dod}'{base}'.dod" "{macros}frefh.mac" "{macros}base.mac" ' >> macdodo.tmp
		catenate "{MacDodo}imports_exp" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo '	"{dod}'{base}'.comh" ¶' >> generated_files.tmp
		echo '	"{dod}'{base}'.comh" ¶' >> generated_comh.tmp
		echo "" >> macdodo.tmp
		echo -n '"{dod}'{base}'.comh" Ä "{dod}'{base}'.dod" "{macros}comh.mac" "{macros}base.mac" ' >> macdodo.tmp
		catenate "{MacDodo}imports_exp" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo '	"{comh}C'{base}'.h" ¶' >> generated_files.tmp
		echo '	"{comh}C'{base}'.h" ¶' >> generated_targets.tmp
		echo "" >> macdodo.tmp
		echo -n '"{comh}C'{base}'.h" Ä "{dod}'{base}'.dod" "{macros}comh.mac" "{macros}base.mac" ' >> macdodo.tmp
		catenate "{MacDodo}imports_dod" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo '	''make "{dod}'{base}'.comh" -f {MAKEFILE} > "{MacDodo}make.comh.out"' >> macdodo.tmp
		echo '	''"{MacDodo}make.comh.out"' >> macdodo.tmp
		echo '	''copy_if_diff -p "{dod}'{base}'.comh" "{comh}C'{base}'.h"'  >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo '	"{dod}'{base}'.comc" ¶' >> generated_files.tmp
		echo '	"{dod}'{base}'.comc" ¶' >> generated_comc.tmp
		echo "" >> macdodo.tmp
		echo -n '"{dod}'{base}'.comc" Ä "{dod}'{base}'.dod" "{macros}comc.mac" "{macros}base.mac" ' >> macdodo.tmp
		catenate "{MacDodo}imports_exp" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo '	"{comc}C'{base}'.cpp" ¶' >> generated_files.tmp
		echo '	"{comc}C'{base}'.cpp" ¶' >> generated_targets.tmp
		echo "" >> macdodo.tmp
		echo -n '"{comc}C'{base}'.cpp" Ä "{dod}'{base}'.dod" "{macros}comc.mac" "{macros}base.mac" ' >> macdodo.tmp
		catenate "{MacDodo}imports_dod" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo '	''make  "{dod}'{base}'.comc" -f {MAKEFILE} > "{MacDodo}make.comc.out"' >> macdodo.tmp
		echo '	''"{MacDodo}make.comc.out"' >> macdodo.tmp
		echo '	''copy_if_diff -p "{dod}'{base}'.comc" "{comc}C'{base}'.cpp"'  >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo "" >> macdodo.tmp
		if "{humanTyped}" == ""
			echo "" >> macdodo.tmp
			echo '	"{dod}'{base}'.comt" ¶' >> generated_files.tmp
			echo '	"{dod}'{base}'.comt" ¶' >> generated_comt.tmp
			echo "" >> macdodo.tmp
			echo -n '"{dod}'{base}'.comt" Ä "{dod}'{base}'.dod" "{macros}comt.mac" "{macros}base.mac" ' >> macdodo.tmp
			catenate "{MacDodo}imports_exp" >> macdodo.tmp
			echo "" >> macdodo.tmp
			echo "" >> macdodo.tmp
			echo '	"{comt}C'{base}'Test.cpp" ¶' >> generated_files.tmp
			echo '	"{comt}C'{base}'Test.cpp" ¶' >> generated_targets.tmp
			echo "" >> macdodo.tmp
			echo -n '"{comt}C'{base}'Test.cpp" Ä "{dod}'{base}'.dod" "{macros}comt.mac" "{macros}base.mac" ' >> macdodo.tmp
			catenate "{MacDodo}imports_dod" >> macdodo.tmp
			echo "" >> macdodo.tmp
			echo '	''make "{dod}'{base}'.comt" -f {MAKEFILE} > "{MacDodo}make.comt.out"' >> macdodo.tmp
			echo '	''"{MacDodo}make.comt.out"'  >> macdodo.tmp
			echo '	''copy_if_diff -p "{dod}'{base}'.comt" "{comt}C'{base}'Test.cpp"'  >> macdodo.tmp
			echo "" >> macdodo.tmp
			echo "" >> macdodo.tmp
			echo '	"{dod}'{base}'.implh" ¶' >> generated_files.tmp
			echo '	"{dod}'{base}'.implh" ¶' >> generated_impl.tmp
			echo "" >> macdodo.tmp
			echo -n '"{dod}'{base}'.implh" Ä "{dod}'{base}'.dod" "{macros}implh.mac" "{macros}base.mac" ' >> macdodo.tmp
			catenate "{MacDodo}imports_exp" >> macdodo.tmp
			echo "" >> macdodo.tmp
			echo "" >> macdodo.tmp
			echo '	"{impl}Impl'{base}'.h" ¶' >> generated_files.tmp
			echo '	"{impl}Impl'{base}'.h" ¶' >> generated_targets.tmp
			echo "" >> macdodo.tmp
			echo -n '"{impl}Impl'{base}'.h" Ä "{dod}'{base}'.dod" "{macros}implh.mac" "{macros}base.mac" ' >> macdodo.tmp
			catenate "{MacDodo}imports_dod" >> macdodo.tmp
			echo "" >> macdodo.tmp
			echo '	''make "{dod}'{base}'.implh" -f {MAKEFILE} > "{MacDodo}make.implh.out"' >> macdodo.tmp
			echo '	''"{MacDodo}make.implh.out"' >> macdodo.tmp
			echo '	''copy_if_diff -p "{dod}'{base}'.implh" "{impl}Impl'{base}'.h"'  >> macdodo.tmp
			echo "" >> macdodo.tmp
			echo "" >> macdodo.tmp
			echo '	"{dod}'{base}'.implc" ¶' >> generated_files.tmp
			echo '	"{dod}'{base}'.implc" ¶' >> generated_impl.tmp
			echo "" >> macdodo.tmp
			echo -n '"{dod}'{base}'.implc" Ä "{dod}'{base}'.dod" "{macros}implc.mac" "{macros}base.mac" ' >> macdodo.tmp
			catenate "{MacDodo}imports_exp" >> macdodo.tmp
			echo "" >> macdodo.tmp
			echo "" >> macdodo.tmp
			echo '	"{impl}Impl'{base}'.cpp" ¶' >> generated_files.tmp
			echo '	"{impl}Impl'{base}'.cpp" ¶' >> generated_targets.tmp
			echo "" >> macdodo.tmp
			echo -n '"{impl}Impl'{base}'.cpp" Ä "{dod}'{base}'.dod" "{macros}implc.mac" "{macros}base.mac" ' >> macdodo.tmp
			catenate "{MacDodo}imports_dod" >> macdodo.tmp
			echo "" >> macdodo.tmp
			echo '	''make "{dod}'{base}'.implc" -f {MAKEFILE} > "{MacDodo}make.implc.out"' >> macdodo.tmp
			echo '	''"{MacDodo}make.implc.out"' >> macdodo.tmp
			echo '	''copy_if_diff -p "{dod}'{base}'.implc" "{impl}Impl'{base}'.cpp"'  >> macdodo.tmp
			echo "" >> macdodo.tmp
		end
		echo "" >> macdodo.tmp
		echo "" >> macdodo.tmp
	end
	echo ""
	echo 'Making build rules and dependencies for COM only interfaces...'
	for base in {AAFCOMINTERFACESONLY}
		echo {base}'...'
		set imports_exp ""
		set imports_exp "`Search -q -s -ns -e '/¥#import .¶//' "{dod}{base}.dod" | StreamEdit -e '1,$ Replace /#import[ ]+.\//""'`"
		if "{imports_exp}" ­ ""
			#echo '	imports_exp '{imports_exp}
		end
		for item in {imports_exp}
			echo -n '"{dod}'{item}'" '
		end > "{MacDodo}imports_exp"
		echo "" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo '	"{dod}'{base}'.exp" ¶' >> generated_files.tmp
		echo '	"{dod}'{base}'.exp" ¶' >> generated_exp.tmp
		echo "" >> macdodo.tmp
		echo -n '"{dod}'{base}'.exp" Ä "{dod}'{base}'.dod" "{macros}exp.mac" "{macros}base.mac" ' >> macdodo.tmp
		catenate "{MacDodo}imports_exp" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo '	"{frefh}'{base}'.frefh" ¶' >> generated_files.tmp
		echo '	"{frefh}'{base}'.frefh" ¶' >> generated_frefh.tmp
		echo -n '"{frefh}'{base}'.frefh" Ä "{dod}'{base}'.dod" "{macros}frefh.mac" "{macros}base.mac" ' >> macdodo.tmp
		catenate "{MacDodo}imports_exp" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo "" >> macdodo.tmp
	end
	echo "" >> macdodo.tmp
	echo ""
	echo 'Making build rules and dependencies for Plugin interfaces...'
	echo "" >> macdodo.tmp
	echo '	"{dod}AAFPluginTypes.refh" ¶' >> generated_files.tmp
	echo '	"{dod}AAFPluginTypes.refh" ¶' >> generated_refh.tmp
	echo '"{dod}AAFPluginTypes.refh" Ä "{dod}AAFPluginTypes.dod" "{macros}refh.mac" "{macros}base.mac"' >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '	"{refh}AAFPluginTypes.h" ¶' >> generated_files.tmp
	echo '	"{refh}AAFPluginTypes.h" ¶' >> generated_targets.tmp
	echo '"{refh}AAFPluginTypes.h" Ä "{dod}AAFPluginTypes.dod" "{macros}refh.mac" "{macros}base.mac"' >> macdodo.tmp
	echo '	''# Recursively make the intermediate target' >> macdodo.tmp
	echo '	''make "{dod}AAFPluginTypes.refh" -f {MAKEFILE} > "{MacDodo}make.refh.out"' >> macdodo.tmp
	echo '	''"{MacDodo}make.refh.out"' >> macdodo.tmp
	echo '	''copy_if_diff -p "{dod}AAFPluginTypes.refh" "{refh}AAFPluginTypes.h"'  >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '	"{dod}AAFPlugin.refh" ¶' >> generated_files.tmp
	echo '	"{dod}AAFPlugin.refh" ¶' >> generated_refh.tmp
	echo '	"{refh}AAFPlugin.h" ¶' >> generated_files.tmp
	echo '	"{refh}AAFPlugin.h" ¶' >> generated_targets.tmp
	for base in {PLUGIN_OBJECTS}
		echo {base}'...'
		set imports_exp ""
		set imports_exp "`Search -q -s -ns -e '/¥#import .¶//' "{dod}{base}.dod" | StreamEdit -e '1,$ Replace /#import[ ]+.\//""'`"
		if "{imports_exp}" ­ ""
			#echo '	imports_exp '{imports_exp}
		end
		for item in {imports_exp}
			echo -n '"{dod}'{item}'" '
		end > "{MacDodo}imports_exp"
		echo "" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo '	"{dod}'{base}'.exp" ¶' >> generated_files.tmp
		echo '	"{dod}'{base}'.exp" ¶' >> generated_exp.tmp
		echo "" >> macdodo.tmp
		echo -n '"{dod}'{base}'.exp" Ä "{dod}'{base}'.dod" "{macros}exp.mac" "{macros}base.mac" ' >> macdodo.tmp
		catenate "{MacDodo}imports_exp" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo '	"{dod}'{base}'.dod" ¶' >> plugin_frefh_dod.tmp
		echo '	"{frefh}'{base}'.frefh" ¶' >> generated_files.tmp
		echo '	"{frefh}'{base}'.frefh" ¶' >> plugin_frefh_targets.tmp
		echo -n '"{frefh}'{base}'.frefh" Ä "{dod}'{base}'.dod" "{macros}frefh.mac" "{macros}base.mac" ' >> macdodo.tmp
		catenate "{MacDodo}imports_exp" >> macdodo.tmp
		echo "" >> macdodo.tmp
		echo "" >> macdodo.tmp
	end
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '	"{frefh}AAFModule.frefh" ¶' >> generated_files.tmp
	echo '	"{frefh}AAFModule.frefh" ¶' >> generated_frefh.tmp
	echo '"{frefh}AAFModule.frefh" Ä "{dod}AAFModule.dod" "{macros}frefh.mac" "{macros}base.mac"' >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp	
	echo '	"{dod}AAFModule.comc" ¶' >> generated_files.tmp
	echo '	"{dod}AAFModule.comc" ¶' >> generated_comc.tmp
	echo '"{dod}AAFModule.comc" Ä "{dod}AAFModule.dod" "{macros}comc.mac" "{macros}base.mac"' >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '	"{comc}CAAFModule.cpp" ¶' >> generated_files.tmp
	echo '	"{comc}CAAFModule.cpp" ¶' >> generated_targets.tmp
	echo '"{comc}CAAFModule.cpp" Ä "{dod}AAFModule.dod" "{macros}comc.mac" "{macros}base.mac"' >> macdodo.tmp
	echo '	''make "{dod}AAFModule.comc" -f {MAKEFILE} > "{MacDodo}make.comc.out"'  >> macdodo.tmp
	echo '	''"{MacDodo}make.comc.out"'  >> macdodo.tmp
	echo '	''copy_if_diff -p "{dod}AAFModule.comc" "{comc}CAAFModule.cpp"'  >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '	"{dod}AAFClassIDs.implh" ¶' >> generated_files.tmp
	echo '	"{dod}AAFClassIDs.implh" ¶' >> generated_impl.tmp
	echo '	"{dod}AAFCLSIDs.comh" ¶' >> generated_files.tmp
	echo '	"{dod}AAFCLSIDs.comh" ¶' >> generated_comh.tmp
	echo '	"{dod}AAFObjectTable.comh" ¶' >> generated_files.tmp
	echo '	"{dod}AAFObjectTable.comh" ¶' >> generated_comh.tmp
	echo '	"{dod}AAFObjectTable_i.comh" ¶' >> generated_files.tmp
	echo '	"{dod}AAFObjectTable_i.comh" ¶' >> generated_comh.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '	"{impl}AAFClassIDs.h" ¶' >> generated_files.tmp
	echo '	"{impl}AAFClassIDs.h" ¶' >> generated_targets.tmp
	echo '	"{comh}AAFCLSIDs.h" ¶' >> generated_files.tmp
	echo '	"{comh}AAFCLSIDs.h" ¶' >> generated_targets.tmp
	echo '	"{comh}AAFObjectTable.h" ¶' >> generated_files.tmp
	echo '	"{comh}AAFObjectTable.h" ¶' >> generated_targets.tmp
	echo '	"{comh}AAFObjectTable_i.cpp" ¶' >> generated_files.tmp
	echo '	"{comh}AAFObjectTable_i.cpp" ¶' >> generated_targets.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '#' >> macdodo.tmp
	echo '#'Generated targets >> macdodo.tmp
	catenate generated_targets.tmp >> macdodo.tmp
	rm -f generated_targets.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '#' >> macdodo.tmp
	echo '#'All Generated files >> macdodo.tmp
	catenate generated_files.tmp >> macdodo.tmp
	rm -f generated_files.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '# Private DOD files...' >> macdodo.tmp
	catenate private_frefh_dod.tmp >> macdodo.tmp
	rm -f private_frefh_dod.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '# Public DOD files...' >> macdodo.tmp
	catenate frefh_dod.tmp >> macdodo.tmp
	rm -f frefh_dod.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '# Public Plugins dod files...' >> macdodo.tmp
	catenate plugin_frefh_dod.tmp >> macdodo.tmp
	rm -f plugin_frefh_dod.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '# Generated exp files...' >> macdodo.tmp
	catenate generated_exp.tmp >> macdodo.tmp
	rm -f generated_exp.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '# Generated COM API DECLARE_INTERFACE Header files...' >> macdodo.tmp
	catenate generated_refh.tmp >> macdodo.tmp
	rm -f generated_refh.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '# Generated PRIVATE fractional COM API DECLARE_INTERFACE files used to build AAFPrivate.h...' >> macdodo.tmp
	catenate generated_private_frefh.tmp >> macdodo.tmp
	rm -f generated_private_frefh.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '# Generated fractional COM API DECLARE_INTERFACE files used to build AAF.h...' >> macdodo.tmp
	catenate generated_frefh.tmp >> macdodo.tmp
	rm -f generated_frefh.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '# Generated COM API CoClass Header files...' >> macdodo.tmp
	catenate generated_comh.tmp >> macdodo.tmp
	rm -f generated_comh.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '# Generated COM API CoClass Source files...' >> macdodo.tmp
	catenate generated_comc.tmp >> macdodo.tmp
	rm -f generated_comc.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '# Generated COM API CoClass Module Test files...' >> macdodo.tmp
	catenate generated_comt.tmp >> macdodo.tmp
	rm -f generated_comt.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '# Generated Impl class files...' >> macdodo.tmp
	catenate generated_impl.tmp >> macdodo.tmp
	rm -f generated_impl.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '# Generated fractional COM API DECLARE_INTERFACE files used to build AAFPlugin.h...' >> macdodo.tmp
	catenate plugin_frefh_targets.tmp >> macdodo.tmp
	rm -f plugin_frefh_targets.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo 'cleantmp Ä' >> macdodo.tmp
	echo '	rm -f make.comc.out' >> macdodo.tmp
	echo '	rm -f make.comh.out' >> macdodo.tmp
	echo '	rm -f make.comc.out' >> macdodo.tmp
	echo '	rm -f make.enum.out' >> macdodo.tmp
	echo '	rm -f make.implc.out' >> macdodo.tmp
	echo '	rm -f make.implh.out' >> macdodo.tmp
	echo '	rm -f make.refh.out' >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '# Cleanup the dodo generated files that are not version controlled...' >> macdodo.tmp
	echo 'clean Ä cleantmp' >> macdodo.tmp
	echo '	''for file in {GENERATED_EXP} {GENERATED_FREFH} {GENERATED_PRIVATE_FREFH} {PLUGIN_FREFH_TARGETS} {GENERATED_REFH} {GENERATED_COMH} {GENERATED_COMC} {GENERATED_COMT} {GENERATED_IMPL}' >> macdodo.tmp
	echo '	''	rm -v -f "{file}"' >> macdodo.tmp
	echo '	''end' >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '# Cleanup all of the dodo generated files...' >> macdodo.tmp
	echo 'realclean Ä cleantmp' >> macdodo.tmp
	echo '	''for file in {GENERATED_FILES}' >> macdodo.tmp
	echo '	''	rm -v -f "{file}"' >> macdodo.tmp
	echo '	''end' >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo "" >> macdodo.tmp
	echo '# Dependency for main targets' >> macdodo.tmp
	echo 'dodofiles.txt Ä {GENERATED_TARGETS}' >> macdodo.tmp
	echo '	''directory {startingDirectory}' >> macdodo.tmp
	copy_if_diff macdodo.tmp macdodo.mak1
	rm -f macdodo.tmp

cleantmp Ä
	rm -f private_frefh_dod.tmp
	rm -f frefh_dod.tmp
	rm -f plugin_frefh_dod.tmp
	rm -f generated_comc.tmp
	rm -f generated_comh.tmp
	rm -f generated_comt.tmp
	rm -f generated_exp.tmp
	rm -f generated_frefh.tmp
	rm -f generated_impl.tmp
	rm -f generated_impl.tmp
	rm -f generated_private_frefh.tmp
	rm -f generated_files.tmp
	rm -f generated_targets.tmp
	rm -f macdodo.tmp
	rm -f plugin_frefh_targets.tmp
	rm -f "{MacDodo}imports_exp"
	rm -f "{MacDodo}imports_dod"


clean Ä cleantmp
	rm -f macdodo.tmp
	rm -f macdodo.mak1
	make clean -f macaafobjects.make > macaafobjects.make.out
	macaafobjects.make.out
	

realclean Ä clean	
	rm macaafobjects.make.out

