#startm .this-module 0
AAFSegment\
#endm
#c
#startm .parent-module 0
AAFComponent\
#endm
#c
#import ./AAFComponent.exp
AD_HEAD
/******************************************\
*                                          *
* Advanced Authoring Format                *
*                                          *
* Copyright (c) 1998 Avid Technology, Inc. *
* Copyright (c) 1998 Microsoft Corporation *
*                                          *
\******************************************/

 
/***********************************************\
*	Stub only.   Implementation not yet added	*
\***********************************************/


AD_IDL(//
// The IAAFSegment interface is implemented by objects which represent
// a component that is independent of any other components which may
// surround it in a sequence.
//
// In addition to the specific error results listed for each method\,
// all methods in this interface may also return one of the following
// values:
// 
// AAFRESULT_NOMEMORY
//   - insufficient system memory is available to perform the
//     operation.
//
// AAFRESULT_NOT_INITIALIZED
//   - This object has not yet had Initialize\(\) called on it through
//     this object's primary interface.
//)
AD_CLASS_UUID(7a2f0571, 1ba3, 11D2, bf, aa, 00, 60, 97, 11, 62, 12)

AD_DEFAULT_UUID(7a2f0570, 1ba3, 11D2, bf, aa, 00, 60, 97, 11, 62, 12)
AD_CLASS_BEGIN
AD_METHOD2(SegmentOffsetToTC,				  
		   [in],
				aafPosition_t *, 
				pOffset,
				Pointer to a Segment Offset to be convert to Timecode,
		   [out],
				aafTimecode_t *,					   
				pTimecode,
				The converted timecode to be returned,
		   Converts the given Segment offset to timecode.
  // 
  // Succeeds if all of the following are true:
  // - the pOffset pointer is valid.
  // - the pTimeCode pointer is valid.
  // 
  // If this method fails the value of pTimecode is left unchanged.
  // 
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\\\, it will return the first one
  // encountered in the order given below:
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \\\(This is the only code indicating success.\\\)
  //
  // AAFRESULT_NULL_PARAM
  //   - any arg is NULL.
  //
  // AAFRESULT_TIMECODE_NOT_FOUND
  //   - the given offset is not available in this segment.)


AD_METHOD3(SegmentTCToOffset,
		   [in],
				aafTimecode_t *,
				pTimecode,
				Pointer to a timecode to be converted to Offset,
		   [in],
				aafRational_t *,
				pEditRate,
				The edit rate for the given timecode ,
		   [out],
				aafFrameOffset_t *,
				pOffset,
				Frame Offset to be returned if found,
		   Converts the given Timecode to an Offset.
  // 
  // Succeeds if all of the following are true:
  // - the pTimeCode pointer is valid.
  // - the pEditRate pointer is valid
  // - the pFrameOffset pointer is valid.
  // 
  // If this method fails the value of pOffset is left unchanged.
  // 
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\\\, it will return the first one
  // encountered in the order given below:
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \\\(This is the only code indicating success.\\\)
  //
  // AAFRESULT_NULL_PARAM
  //   - any arg is NULL.
  //
  // AAFRESULT_TIMECODE_NOT_FOUND
  //   - the given timecode is not available in this segment.)
AD_CLASS_END
