#c *********************************************************************
#c
#c $Id: AAFEssenceFormat.dod,v 1.9 2005/02/10 17:47:23 heydowns Exp $ $Name:  $
#c
#c The contents of this file are subject to the AAF SDK Public
#c Source License Agreement (the "License"); You may not use this file
#c except in compliance with the License.  The License is available in
#c AAFSDKPSL.TXT, or you may obtain a copy of the License from the AAF
#c Association or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.
#c
#c The Original Code of this file is Copyright 1998-2004, Licensor of the
#c AAF Association.
#c
#c The Initial Developer of the Original Code of this file and the
#c Licensor of the AAF Association is Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFEssenceFormat\
#endm
#c
#startm .parent-module 0
AAFRoot\
#endm
#c
AD_HEAD
AD_IDL(///
/// The AAFEssenceFormat class represents a collection of parameters
/// \(such as image height/width\, audio sample width\) which describes
/// a piece of essence.  Each parameter is specified by an AUID\, and
/// contains a variable length piece of data.
///
/// When creating a piece of essence\, you should call
/// AddFormatSpecifier\(\) for each required or known parameter\, and
/// the codec will supply defaults for other optional parameters.
///
/// In addition to the specific error results listed for each method\,
/// all methods in this interface may also return one of the following
/// values:
/// 
/// AAFRESULT_NOMEMORY
///   - insufficient system memory is available to perform the
///     operation.
///
/// AAFRESULT_NOT_INITIALIZED
///   - This object has not yet had Initialize\(\) called on it through
///     this object's primary interface.
///)
AD_CLASS_UUID(34C2DC81, 904C, 11d2, 80, 88, 00, 60, 08, 14, 3E, 6F)

AD_DEFAULT_UUID(34C2DC82, 904C, 11d2, 80, 88, 00, 60, 08, 14, 3E, 6F)
AD_XCLASS_BEGIN(Concrete, Transient)
AD_METHOD3(AddFormatSpecifier,
			[in],aafUID_constref,essenceFormatCode,From aaddefuids.h,
			[in],aafInt32,valueSize,Size of preallocated buffer,
			[in\\\, size_is\\\(valueSize\\\)],aafDataBuffer_t,value,Value data,
     Appends a format specifier to the AAFEssenceFormat.  If an
  /// essenceFormatCode has already been added\\\, then this call
  /// replaces the value\\\, otherwise the value is appended.
  ///
  /// The value data is passed in as a void * through the "value"
  /// argument.  The size of the value must be passed through the
  /// valueSize argument.)


AD_METHOD4(GetFormatSpecifier,
			[in],aafUID_constref,essenceFormatCode,From aaddefuids.h,
			[in],aafInt32,valueSize,Size of preallocated buffer,
			[out\\\, size_is\\\(valueSize\\\)\\\,length_is\\\(*bytesRead\\\)],aafDataBuffer_t,value,Preallocated buffer to hold value,
			[out],aafInt32*,bytesRead,Number of actual bytes read,

     The data value is returned in a preallocated buffer of size
  /// valueSize.
  ///
  /// The actual number of bytes read is returned in bytesRead.  If the
  /// buffer is not big enough to return the entire  value\\\, an error
  /// is returned.)


AD_METHOD1(NumFormatSpecifiers,
			[out],aafInt32*,numSpecifiers,The number of specifiers present.,
     The data value is returned in a preallocated buffer of size
  /// valueSize.)


AD_METHOD5(GetIndexedFormatSpecifier,
			[in],aafInt32,index,0-based index,
			[out],aafUID_t*,essenceFormatCode,From aaddefuids.h,
			[in],aafInt32,valueSize,Size of preallocated buffer,
			[out\\\, size_is\\\(valueSize\\\)\\\,length_is\\\(*bytesRead\\\)],aafDataBuffer_t,value,Preallocated buffer to hold value,
			[out],aafInt32*,bytesRead,Number of actual bytes read,
     The data value is returned in a preallocated buffer of size
  /// valueSize.)
AD_XCLASS_END(Concrete, Transient)
