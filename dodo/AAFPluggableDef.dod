#startm .this-module 0
AAFPluggableDef\
#endm
#c
#startm .parent-module 0
AAFDefObject\
#endm
#c
AD_HEAD
AD_IDL(//
// This interface is used with all objects representing  behaviors which may be implemented
// using plug-ins.  Classes which have this interface in common include AAFCodecDef\. AAFContainerDef\,
// and AAFEffectDef.
//
// In addition to the specific error results listed for each method\,
// all methods in this interface may also return one of the following
// values:
// 
// AAFRESULT_NOMEMORY
//   - insufficient system memory is available to perform the
//     operation.
//)

AD_FORWARD_DECLARATION(AAFDefObject)
AD_FORWARD_DECLARATION(EnumAAFPluginDescriptors)
AD_FORWARD_DECLARATION(EnumAAFCodecFlavours)

/************************************************\
*                                               *
* Advanced Authoring Format                     *
*									            *
* Copyright (c) 1998-1999 Avid Technology, Inc. *
* Copyright (c) 1998-1999 Microsoft Corporation *
*                                               *
\************************************************/



/***********************************************\
*	Stub only.   Implementation not yet added	*
\***********************************************/

AD_CLASS_UUID(AD1BB859, DBB2, 11d2, 80, 9C, 00, 60, 08, 14, 3E, 6F)

AD_DEFAULT_UUID(AD1BB85A, DBB2, 11d2, 80, 9C, 00, 60, 08, 14, 3E, 6F)
AD_XCLASS_BEGIN(Concrete, StoredObject)

AD_XMETHOD1(AppendPluginDescriptor,
			[in],
			objIn,
			AAFPluginDescriptor,
			pPluginDescriptor,
			PluginDescriptor to append,

			Append another PluginDescriptor to this PluggableDefinition.  Use this
  // function to add a PluginDescriptor to be scanned last when searching for
  // the plugin \(a secondary location for the plugin\).
  // 
  // Succeeds if all of the following are true:
  // - the pPluginDescriptor pointer is valid.
  // 
  // If this method fails no state will be changed.
  // 
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\)
  //
  // AAFRESULT_NULL_PARAM
  //   - pPluginDescriptor is null.)


AD_XMETHOD1(PrependPluginDescriptor,
			[in],
			objIn,
			AAFPluginDescriptor,
			pPluginDescriptor,
			PluginDescriptor to append,

			Append another PluginDescriptor to this PluggableDefinition.  Use this
  // function to add a PluginDescriptor to be scanned first when searching for
  // the plugin \(a new primary location for the plugin\).
  // 
  // Succeeds if all of the following are true:
  // - the pPluginDescriptor pointer is valid.
  // 
  // If this method fails no state will be changed.
  // 
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\)
  //
  // AAFRESULT_NULL_PARAM
  //   - pPluginDescriptor is null.)

AD_XMETHOD1(EnumPluginDescriptors,
			[out\, retval],
			objOut,
			EnumAAFPluginDescriptors,
			ppEnum,
			AAFPluginDescriptor Enumeration,
			Returns an IEnumAAFPluginDescriptors enumerator for the plugin descriptors
  // contained in the AAFPluggableDef through the *ppEnum argument.
  // 
  // The returned enumerator is AddRef\(\)ed before it is returned.
  //
  // Succeeds if all of the following are true:
  // - this object has already been initialized.
  // - the ppEnum pointer is valid.
  // 
  // If this method fails nothing will be written to *ppEnum.
  // 
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\)
  //
  // AAFRESULT_NOT_INITIALIZED
  //   - Initialize\(\) has already been called on this object.
  //
  // AAFRESULT_NULL_PARAM
  //   - ppEnum is null.
  //
  // E_FAIL
  //   - Failed to create the enumerator.)



AD_XCLASS_END(Concrete, StoredObject)
