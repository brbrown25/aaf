#startm .this-module 0
AAFObject\
#endm
#startm .parent-module 0
AAFRoot\
#endm
#c
AD_HEAD
AD_IDL(//
// This interface is implemented for all AAF persistent classes.  In
// addition to methods which all clients can use\, it provides methods
// for direct property access which should not be used unless the
// client programmer is aware of the liabilities.
//
// In addition to the specific error results listed for each method\,
// all methods in this interface may also return one of the following
// values:
// 
// AAFRESULT_NOMEMORY
//   - insufficient system memory is available to perform the
//     operation.
//
// AAFRESULT_NOT_INITIALIZED
//   - This object has not yet had Initialize\(\) called on it through
//     this object's primary interface.
//)
AD_FORWARD_DECLARATION(EnumAAFProperties)
AD_CLASS_UUID(B1A213AC, 1A7D, 11D2, BF, 78, 00, 10, 4B, C9, 15, 6D)

AD_DEFAULT_UUID(B1A213AB, 1A7D, 11D2, BF, 78, 00, 10, 4B, C9, 15, 6D)
AD_CLASS_BEGIN
AD_XMETHOD1(SetGeneration,
			[in],
			objPass,
			aafUID_t *,
			pGeneration,
			Generation ID to which this object is to be set,
			Sets the generation of this object to the given value.  Succeeds
  // if all of the following are true:
  // - the given pGeneration pointer is valid.
  //
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\)
  //
  // AAFRESULT_NULL_PARAM
  //   - pGeneration arg is NULL.
  //)


AD_XMETHOD1(GetGeneration,
			[out],
			objPass,
			aafUID_t *,
			pGeneration,
			Generation ID into which this object's generation is to be written,
		    Gets the generation of this object\, which is a unique identifier
  // that is used to detect when an object has been modified.  The
  // generation is placed into the caller-allocated aafUID_t pointed
  // to by pGeneration.  Succeeds if all of the following are true:
  // - the given pGeneration pointer is valid.
  //
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\)
  //
  // AAFRESULT_NULL_PARAM
  //   - pGeneration arg is NULL.)


AD_XMETHOD1(GetObjectClass,
            [out],
			objPass,
			aafUID_t *,
			pClass,
			ID of object class of which this object is an instance.,
            Gets the object class of which this object is an instance
  // and places it into the caller-allocated aafUID_t pointed to by
  // pClass.  Succeeds if all of the following are true:
  // - the given pClass pointer is valid.
  //
  // Note! Use care when dealing with the object class.  Among the
  // pitfalls to be avoided is that tests for equality will not
  // reflect inheritance.  This becomes important if an unknown
  // non-builtin \(that is\, user defined\) object class ID is obtained.
  //
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\)
  //
  // AAFRESULT_NULL_PARAM
  //   - pClass arg is NULL.)


AD_XMETHOD1(EnumProperties,
			[out\, retval],
			  objOut,
			  EnumAAFProperties,
			  ppEnum,
			  Property Enumeration,
              Places an enumerator for properties into the *ppEnum argument.
  // 
  // Succeeds if all of the following are true:
  // - the ppEnum pointer is valid.
  // 
  // If this method fails nothing will be written to *ppEnum.
  // 
  // Note! This is a low-level method which allows direct access to
  // properties.  If such access is done\, any syntactic checking \(such
  // as that which is performed in all other named property Get/Set
  // methods\) is not done here.  Users must use this method at their
  // own risk.
  //
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\)
  //
  // AAFRESULT_NULL_PARAM
  //   - ppEnum is null.)
AD_CLASS_END
