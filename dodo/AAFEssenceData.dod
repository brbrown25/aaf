#c *********************************************************************
#c
#c $Id: AAFEssenceData.dod,v 1.15.2.1 2004/06/08 13:45:04 stuart_hc Exp $ $Name:  $
#c
#c The contents of this file are subject to the AAF SDK Public
#c Source License Agreement (the "License"); You may not use this file
#c except in compliance with the License.  The License is available in
#c AAFSDKPSL.TXT, or you may obtain a copy of the License from the AAF
#c Association or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.
#c
#c The Original Code of this file is Copyright 1998-2004, Licensor of the
#c AAF Association.
#c
#c The Initial Developer of the Original Code of this file and the
#c Licensor of the AAF Association is Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFEssenceData\
#endm
#c
#startm .parent-module 0
AAFObject\
#endm
#c
#import ./AAFEssenceDataEx.exp
AD_HEAD

AD_IDL(//
//
// This interface is DEPRECATED\, please use IAAFEssenceDataEx.
//
// The IAAFEssenceData interface is used to modify AAFEssenceData
// objects\, which contain the actual essence data \(ex. WAVE\) when
// it is contained within an AAF file.  Normally the client
// application would access the essence through the IAAFEssenceAccess
// interface\, which handles the work of finding and \(de\)compressing
// the data.  However\, in rare cases direct access to the data is
// required\, so this interface is exposed.
//
// In addition to the specific error results listed for each method\,
// all methods in this interface may also return one of the following
// values:
//
// AAFRESULT_NULL_PARAM
//   - One of the passed in pointers is NULL.
//
// AAFRESULT_NOMEMORY
//   - insufficient system memory is available to perform the
//     operation.
//)
AD_FORWARD_DECLARATION(AAFSourceMob)
AD_CLASS_UUID(6a33f4e1, 8ed6, 11d2, bf, 9d, 00, 10, 4b, c9, 15, 6d)

AD_DEFAULT_UUID(6a33f4e2, 8ed6, 11d2, bf, 9d, 00, 10, 4b, c9, 15, 6d)
AD_COM_EXT_CLASS_BEGIN(public IAAFEssenceDataEx)

AD_XMETHOD1(Initialize,
[in],
objIn,
AAFSourceMob,
pFileMob,
reference to a file mob,
     Associates a weak reference to the given file mob with the
  // essence data.
  //
  // Succeeds if all of the following are true:
  // - the pFileMob pointer is valid and points to 
  // a file mob \(contains a file descriptor\).
  // 
  // If this method fails no state will be changed.
  // 
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\)
  //
  // AAFRESULT_NULL_PARAM
  //   - pFileMob is null.)

AD_METHOD3(Write,
[in],aafUInt32, bytes, write this many bytes,
[out\\\, size_is\\\(bytes\\\)],aafDataBuffer_t,buffer, here is the buffer,
[out\\\,ref],aafUInt32 *,bytesWritten,,
Write pre-interleaved data to a essence stream.)


AD_METHOD3(Read,
[in],aafUInt32, bytes, read this many bytes,
[out\\\, size_is\\\(bytes\\\)\\\, length_is\\\(*bytesRead\\\)],aafDataBuffer_t,buffer, here is the buffer,
[out\\\,ref],aafUInt32 *,bytesRead,,
Read pre-interleaved data from a essence stream.)


AD_METHOD1(SetPosition,
[in], aafPosition_t, offset, offset from beginning of essence,
Seek to absolute position within the essence data.)


AD_METHOD1(GetPosition,
[out], aafPosition_t*, pOffset, offset from beginning of essence,
Get the absolute position within the essence data.)


AD_METHOD1(GetSize,
[out], aafLength_t *, pSize , size of essence data,
Return the total size of the essence data.)


AD_XMETHOD1(SetFileMob,
[in],
objIn,
AAFSourceMob,
pFileMob,
reference to a file mob,
     Associates a weak reference to the given file mob with the
  // essence data.
  //
  // Succeeds if all of the following are true:
  // - the pFileMob pointer is valid and points to 
  // a file mob \(contains a file descriptor\).
  // 
  // If this method fails no state will be changed.
  // 
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\)
  //
  // AAFRESULT_NULL_PARAM
  //   - pFileMob is null.)


AD_XMETHOD1(GetFileMob,
[in],
objOut,
AAFSourceMob,
ppFileMob,
reference to a file mob,
     Associates a weak reference to the given file mob with the
  // essence data.
  //
  // Succeeds if all of the following are true:
  // - the ppFileMob pointer is valid and a weak
  // reference to the associated file mob can be
  // resolved.
  // 
  // If this method fails no state will be changed.
  // 
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\)
  //
  // AAFRESULT_NULL_PARAM
  //   - ppFileMob is null.)


AD_METHOD1(GetFileMobID,
[out], aafMobID_t *, pFileMobID, the file mob id associated with essence,
     Return the mob id used to find the file mob associated with this
  // essence.  The file mob must exist in the same file as this
  // essence data.)

AD_COM_METH(.method-WriteSampleIndex)
AD_COM_METH(.method-ReadSampleIndex)
AD_COM_METH(.method-SetSampleIndexPosition)
AD_COM_METH(.method-GetSampleIndexPosition)
AD_COM_METH(.method-GetSampleIndexSize)
AD_COM_EXT_CLASS_END(AAFEssenceDataEx)
