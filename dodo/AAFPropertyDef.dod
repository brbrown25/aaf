#c/*************************************************\
#c*													*
#c* Advanced Authoring Format						*
#c*													*
#c* Copyright (c) 1998-1999 Avid Technology, Inc.	*
#c*													*
#c\*************************************************/
#startm .this-module 0
AAFPropertyDef\
#endm
#c
#startm .parent-module 0
AAFDefObject\
#endm
#c
AD_HEAD
AD_IDL(//
// This interface is used to access the definitions of types for
// properties contained in AAF persistent objects.
//
// A property definition is used to indicate a particular property
// within a class.  It defines the name and type of a property to be
// contained in objects.  Clients cannot create these directly; they
// must be created through IAAFClassDef::AppendNewPropertyDef\(\).
//
// In addition to the specific error results listed for each method\,
// all methods in this interface may also return one of the following
// values:
// 
// AAFRESULT_NOMEMORY
//   - insufficient system memory is available to perform the
//     operation.
//)
AD_FORWARD_DECLARATION(EnumAAFPropertyValues)
AD_FORWARD_DECLARATION(AAFPropertyValue)
AD_FORWARD_DECLARATION(AAFTypeDef)
AD_CLASS_UUID(dfbd6522, 1d81, 11d2, bf, 96, 00, 60, 97, 11, 62, 12) 

AD_DEFAULT_UUID(dfbd6521, 1d81, 11d2, bf, 96, 00, 60, 97, 11, 62, 12)
AD_XCLASS_BEGIN(Concrete, StoredObject)
AD_XMETHOD1(GetTypeDef,
			[out],
			objOut,
			AAFTypeDef,
			ppTypeDef,
			definition of type contained by this property,

			Returns a reference to this property's type definition.
  //
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\)
  //
  // AAFRESULT_NULL_PARAM
  //   - pResult is null.)


AD_STD_METHOD_STRING_GET_AND_SIZE(Name, the human-legible name.)


AD_XMETHOD1(GetIsOptional,
			[out\, retval],
			objPass,
			aafBoolean_t *,
			pIsOptional,
			pointer to the result, 

     Sets *pIsOptional to AAFTrue for properties that are optional.
  // Sets it to AAFFalse for properties that are mandatory.
  //
  // Succeeds if:
  // - The pIsOptional pointer is valid.
  //
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  AD_STD_COMMENT_METH_STUB
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\)
  //
  // AAFRESULT_NULL_PARAM
  //   - The pIsOptional pointer is NULL.)


AD_XMETHOD1(GetIsSearchable,
			[out\, retval],
			objPass,
			aafBoolean_t *,
			pIsSearchable,
			pointer to the result, 

			Sets *pIsSearchable to AAFTrue for properties that can contain
  // user-searchable data.  Sets it to AAFFalse otherwise.
  //
  // Succeeds if:
  // - The pIsSearchable pointer is valid.
  //
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  AD_STD_COMMENT_METH_STUB
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\)
  //
  // AAFRESULT_NULL_PARAM
  //   - The pIsSearchable pointer is NULL.)


AD_XMETHOD1(SetIsSearchable,
			[in],
			enumIn,
			aafBoolean_t,
			IsSearchable,
			is searchable value, 

			Sets the user-searchable boolean\, which will indicate
  // whether or not this property can contain user-searchable data.
  // Set it to AAFTrue if it can contain user-searchable data; set it
  // to AAFFalse otherwise.
  //
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  AD_STD_COMMENT_METH_STUB
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\))


AD_STD_METHOD_STRING_MULTI_SET_GET_SIZE(Description,
		 the description of the property definition.)


AD_XMETHOD1(GetDefaultValue,
			[out\, retval],
			objOut,
            AAFPropertyValue,
			ppDataValue,
			Pointer to default data value,

			Gets the default data value of this property definition.
  // 
  // Succeeds if all of the following are true:
  // - the ppDataValue pointer is valid.
  // 
  // If this method fails *ppDataValue will not be changed.
  // 
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  AD_STD_COMMENT_METH_STUB
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\)
  //
  // AAFRESULT_NULL_PARAM
  //   - ppDataValue arg is NULL.)


AD_XMETHOD1(SetDefaultValue,
			[in],
			objIn,
			AAFPropertyValue,
			pDataValue,
			default data value,

		   Sets the default data value of this property definition.
  // 
  // Succeeds if all of the following are true:
  // - the pDataValue pointer is valid.
  // 
  // If this method fails the Default Value property will not be
  // changed.
  // 
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  AD_STD_COMMENT_METH_STUB
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\)
  //
  // AAFRESULT_NULL_PARAM
  //   - pDataValue arg is NULL.)


AD_XCLASS_END(Concrete, StoredObject)
