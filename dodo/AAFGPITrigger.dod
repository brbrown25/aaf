#c *********************************************************************
#c
#c $Id: AAFGPITrigger.dod,v 1.9 2005/02/10 17:47:23 heydowns Exp $ $Name:  $
#c
#c The contents of this file are subject to the AAF SDK Public
#c Source License Agreement (the "License"); You may not use this file
#c except in compliance with the License.  The License is available in
#c AAFSDKPSL.TXT, or you may obtain a copy of the License from the AAF
#c Association or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.
#c
#c The Original Code of this file is Copyright 1998-2004, Licensor of the
#c AAF Association.
#c
#c The Initial Developer of the Original Code of this file and the
#c Licensor of the AAF Association is Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFGPITrigger\
#endm
#c
#startm .parent-module 0
AAFEvent\
#endm
#c
AD_HEAD

AD_IDL(///
/// The IAAFGPITrigger interface is implemented by objects which represent
/// an trigger action that should be taken when its position in time is
/// reached.
///
/// In addition to the specific error results listed for each method\,
/// all methods in this interface may also return one of the following
/// values:
/// 
/// AAFRESULT_NOMEMORY
///   - insufficient system memory is available to perform the
///     operation.
///
/// AAFRESULT_NOT_INITIALIZED
///   - This object has not yet had Initialize\(\) called on it through
///     this object's primary interface.  Note that IAAFMobSlot is a
///     primary interface for an abstract class\, so it is not
///     appropriate for the Initialize\(\) method to exist in this
///     interface.  The Initialize\(\) method is available through the
///     concrete object's primary interface.
/// 
///)

AD_CLASS_UUID(e684d78b, b935, 11d2, bf, 9d, 00, 10, 4b, c9, 15, 6d)

AD_DEFAULT_UUID(e684d78c, b935, 11d2, bf, 9d, 00, 10, 4b, c9, 15, 6d)
AD_XCLASS_BEGIN(Concrete, StoredObject)

AD_XMETHOD1(GetActiveState,
		[out\, retval],
		objPass,
		aafBoolean_t *,
		pActiveState,
		pointer to the result, 

		Sets *pActiveState to AAFTrue it the event is on otherwise
  /// sets it to AAFFalse.
  ///
  /// Succeeds if:
  /// - The pActiveState pointer is valid.
  ///
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - The pActiveState pointer is NULL.)


AD_XMETHOD1(SetActiveState,
		[in],
		enumIn,
		aafBoolean_t,
		ActiveState,
		the active state of the trigger, 

		Set to AAFTrue to turn the trigger on or AAFFalse
  /// to turn the trigger off.
  ///
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\))

AD_XCLASS_END(Concrete, StoredObject)
