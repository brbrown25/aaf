#startm .this-module 0
AAFSearchSource\
#endm
#c
AD_HEAD
AD_IDL(//
// The IAAFSearchSource interface is used to return source information
// for some mob slots.
//
// In addition to the specific error results listed for each method\,
// all methods in this interface may also return one of the following
// values:
// 
// AAFRESULT_NOMEMORY
//   - insufficient system memory is available to perform the
//     operation.
//
// AAFRESULT_NOT_INITIALIZED
//   - This object has not yet had Initialize\(\) called on it through
//     this object's primary interface.
//)
AD_DEFAULT_UUID(332CBDD0, 5425, 11D2, AA, 7A, 10, 00, 3D, 00, 00, 00)
AD_CLASS_BEGIN
AD_XMETHOD6(SearchSource,
			[in],
			  objPass,
			  aafSlotID_t,
			  slotID,
			  Slot ID,
			[in],
			  objPass,
			  aafPosition_t,
			  offset,
			  Offset,
			[in],
			  objPass,
			  aafMobKind_t,
			  mobKind,
			  Mob Kind,
			[in],
			  objPass,
			  aafMediaCriteria_t *,
			  pMediaCrit,
			  Media Criteria,
			[in],
			  objPass,
			  aafEffectChoice_t *,
			  pEffectChoice,
			  Effect Choice,
			[out],
			  objOut,
			  AAFFindSourceInfo,
			  ppSourceInfo,
			  Source Information,
			This function returns the source information for a slot in a
  // Master Mob or Source Mob.  It follows the Source Clip references
  // in the specified slot until it encounters the kind of Mob
  // specified in the mobKind parameter.  This function cannot be used
  // on a Composition Mob and is not intended to be called
  // iteratively; use the MobOpenSearch\, MobGetNextSource\,
  // MobGetThisSource\, and MobCloseSearch functions for those
  // purposes. 
  //
  // The returned component and find source info are AddRef\(\)ed
  // before they are returned.
  //
  // Succeeds if all of the following are true:
  //    ppSourceInfo is non-NULL
  //	a Mob of the requested kind is found
  // \(other conditions here\)
  // 
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\)
  //
  // AAFRESULT_NULL_PARAM
  //   - ppCpnt is null.
  //
  // OM_ERR_INVALID_MOBTYPE
  //	- The enumerator is out of range \(bad cast\, or writing toolkit newer than reader\)
  //
  // OM_ERR_TRAVERSAL_NOT_POSS
  //	- Can not find a mob of the given kind. 
  //
  // \(other codes here.\))
AD_CLASS_END
