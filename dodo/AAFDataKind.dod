#c *********************************************************************
#c
#c $Id: AAFDataKind.dod,v 1.8 2004/02/27 14:26:17 stuart_hc Exp $ $Name:  $
#c
#c The contents of this file are subject to the AAF SDK Public
#c Source License Agreement (the "License"); You may not use this file
#c except in compliance with the License.  The License is available in
#c AAFSDKPSL.TXT, or you may obtain a copy of the License from the AAF
#c Association or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.
#c
#c The Original Code of this file is Copyright 1998-2004, Licensor of the
#c AAF Association.
#c
#c The Initial Developer of the Original Code of this file and the
#c Licensor of the AAF Association is Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFDataKind\
#endm
#c
#startm .parent-module 0
AAFObject\
#endm
#c
AD_HEAD
/*************************************************************************
 * 
 * @class AAFDataKind | This class encapsulates the definition and  
 *		  functionality of AAF data kinds which are implemented as AUIDs.
 *
 * @base public | AAFObject
 *
 *************************************************************************/

AD_CLASS_BEGIN

AD_METHOD1(GetName,
		   [retval][out],
		   AAFString *,
		   pstrName,
		   Pointer to name
		   Gets the unique name that identifies this datakind object.)

AD_METHOD1(IsCharKind,
		   [retval][out],
		   AAFBool *,
		   bIsCharKind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a Char.)

AD_METHOD1(IsUInt8Kind,
		   [retval][out],
		   AAFBool *,
		   bIsUInt8Kind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a UINT8.)

AD_METHOD1(IsUInt16Kind,
		   [retval][out],
		   AAFBool *,
		   bIsUIntKind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a UINT16.)

AD_METHOD1(IsUInt32Kind,
		   [retval][out],
		   AAFBool *,
		   bIsUInt32Kind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a UINT32.)

AD_METHOD1(IsInt8Kind,
		   [retval][out],
		   AAFBool *,
		   bIsInt8Kind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a INT8.)

AD_METHOD1(IsInt16Kind,
		   [retval][out],
		   AAFBool *,
		   bIsIntKind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a INT16.)

AD_METHOD1(IsInt32Kind,
		   [retval][out],
		   AAFBool *,
		   bIsInt32Kind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a INT32.)

AD_METHOD1(IsRationalKind,
		   [retval][out],
		   AAFBool *,
		   bIsRationalKind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a rational.)

AD_METHOD1(IsBooleanKind,
		   [retval][out],
		   AAFBool *,
		   bIsBooleanKind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a boolean.)

AD_METHOD1(IsStringKind,
		   [retval][out],
		   AAFBool *,
		   bIsStringKind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a string.)

AD_METHOD1(IsColorSpaceKind,
		   [retval][out],
		   AAFBool *,
		   bIsColorSpaceKind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a colorspace.)

AD_METHOD1(IsColorKind,
		   [retval][out],
		   AAFBool *,
		   bIsColorKind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a Color.)

AD_METHOD1(IsDistanceKind,
		   [retval][out],
		   AAFBool *,
		   bIsDistanceKind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a distance.)

AD_METHOD1(IsPointKind,
		   [retval][out],
		   AAFBool *,
		   bIsPointKind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a point.)

AD_METHOD1(IsDirectionCodeKind,
		   [retval][out],
		   AAFBool *,
		   bIsDirectionCodeKind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a direction code.)

AD_METHOD1(IsPolynomialKind,
		   [retval][out],
		   AAFBool *,
		   bIsPolynomialKind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a polynomial.)

AD_METHOD1(IsPictureKind,
		   [retval][out],
		   AAFBool *,
		   bIsPictureKind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a picture.)

AD_METHOD1(IsMatteKind,
		   [retval][out],
		   AAFBool *,
		   bIsMatteKind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a matte.)

AD_METHOD1(IsPictureWithMatteKind,
		   [retval][out],
		   AAFBool *,
		   bIsPictureWithMatteKind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a picture with matte.)

AD_METHOD1(IsSoundKind,
		   [retval][out],
		   AAFBool *,
		   bIsSoundKind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a sound.)

AD_METHOD1(IsStereoSoundKind,
		   [retval][out],
		   AAFBool *,
		   bIsStereoSoundKind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a stereo sound.)

AD_METHOD1(IsTimecodeKind,
		   [retval][out],
		   AAFBool *,
		   bIsTimecodeKind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a timecode.)

AD_METHOD1(IsEdgecodeKind,
		   [retval][out],
		   AAFBool *,
		   bIsEdgecodeKind,
		   pointer to the return value, 
		   Sets return value to TRUE if DataKind is a edgecode.)

AD_METHOD2(DoesDatakindConvertTo,
		   [retval][out],AAFBool *,bDoesConvertTo, pointer to result,
		   [in],AAFString, datakindname, DatakindName to compare against
		   Sets return value to TRUE if the datakind of the given object
		   // can be converted to the datakind specified in the IN 
		   // parameter with the datakindName string.)
				 
AD_METHOD2(IsDatakindOf,
		   [retval][out],AAFBool *,bIsDatakindOf, pointer to result,
		   [in],AAFString, datakindname, DatakindName to compare against
		   Sets return value to TRUE if the datakind of the given object
		   // matches the datakind specified in the IN parameter with
		   // the datakindName string.)

AD_METHOD2(DoesDatakindConvertFrom,
		   [retval][out],AAFBool *,bDoesConvertFrom, pointer to result,
		   [in],AAFString, datakindname, DatakindName to compare against
		   Sets return value to TRUE if the datakind of the given object
		   // can be converted from the datakind specified in the IN 
		   // parameter specified with the datakindName string.)

AD_CLASS_END
