#c *********************************************************************
#c
#c $Id: AAFTaggedValueDefinition.dod,v 1.1.2.1 2004/04/08 00:38:05 jptrainor Exp $ $Name:  $
#c
#c The contents of this file are subject to the AAF SDK Public
#c Source License Agreement (the "License"); You may not use this file
#c except in compliance with the License.  The License is available in
#c AAFSDKPSL.TXT, or you may obtain a copy of the License from the AAF
#c Association or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.
#c
#c The Original Code of this file is Copyright 1998-2004, Licensor of the
#c AAF Association.
#c
#c The Initial Developer of the Original Code of this file and the
#c Licensor of the AAF Association is Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFTaggedValueDefinition\
#endm
#c
#startm .parent-module 0
AAFDefObject\
#endm
#c
AD_HEAD
AD_IDL( //
// This interface is used to describe the data type of a value stored
// in an AAFTaggedValue object.
//)
AD_FORWARD_DECLARATION(AAFPropertyDef)
AD_FORWARD_DECLARATION(EnumAAFPropertyDefs)

AD_CLASS_UUID(dc900e85, 79ac, 4b88, 90, 5e, 4f, 02, ec, 99, a9, ae)

AD_DEFAULT_UUID(c358428a, bf73, 4558, bf, df, 48, 21, 60, 71, 98, 23)

AD_XCLASS_BEGIN(Concrete, StoredObject)


AD_XMETHOD1(AddParentProperty,
	    [in],
	    objIn,
	    AAFPropertyDef,
	    pParentProperty,
	    Property definition to add.,

  // Add a property definition to the tagged value definition.
  //
  // Return codes:
  //
  // AAFRESULT_SUCCESS
  //   - succeeded.
  //
  // AAFRESULT_NULL_PARAM
  //   - pParentProperty is null.)

AD_XMETHOD1(GetParentProperties,
	    [out],
	    objOut,
	    EnumAAFPropertyDefs,
	    ppEnum,
	    Property definition enumerator.,

  // Writes an enumerator for the property definitions into *ppEnum.
  // A reference is added to the new enumerator before it is returned.
  //
  // Return codes:
  //
  // AAFRESULT_SUCCESS
  //   - succeeded.
  //
  // AAFRESULT_NULL_PARAM
  //   - ppEnum is null.)

AD_XMETHOD1(CountParentProperties,
	    [out],
	    objPass,
	    aafUInt32*,
	    pNumProperties,
	    Number of property definitions.,

  // Writes the total number of property definitions into *pNumProperties if\,
  // and only if\, the method succeeds.
  //
  // Return codes:
  //
  // AAFRESULT_SUCCESS
  //   - succeeded.
  //
  // AAFRESULT_NULL_PARAM
  //   - ppEnum is null.)

AD_XMETHOD1(RemoveParentProperty,
	    [in],
	    objIn,
	    AAFPropertyDef,
	    pParentProperty,
	    Property to remove.,

  // Removes the given property definition.
  //
  // Return codes:
  //
  // AAFRESULT_SUCCESS
  //   - succeeded.
  //
  // AAFRESULT_NULL_PARAM
  //   - ppEnum is null.
  //
  // AAFRESULT_NO_MORE_OBJECTS
  //   - The property definition is not in this tagged value definition.)

AD_XCLASS_END(Concrete,StoredObject)
