#c *********************************************************************
#c
#c The contents of this file are subject to the AAF SDK Public
#c Source License Agreement (the "License"); You may not use this file
#c except in compliance with the License.  The License is available in
#c AAFSDKPSL.TXT, or you may obtain a copy of the License from the AAF
#c Association or its successor.
#c 
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.
#c 
#c The Original Code of this file is Copyright 1998-2001, Licensor of the
#c AAF Association.
#c 
#c The Initial Developer of the Original Code of this file and the
#c Licensor of the AAF Association is Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFGetFileBits\
#endm
#startm .parent-module 0
AAFRoot\
#endm
#c
AD_HEAD
AD_IDL(//
// This interface is implemented by the toolkit\, and is provided to
// clients of IAAFFile to allow them to obtain the raw bits of a file
// after close.
//
// Note that this and the IAAFSetFileBits interfaces are different
// than the IAAFRawStorage interfaces in that those are implemented by
// clients to provide access to the desired media; these are provided
// by the toolkit to provide read OR write \(but not both
// simultaneously\) access to the raw bits.
AD_STD_COMMENT_IFC_HEADER)
AD_CLASS_UUID(3CC80281, 72A8, 11D4, B8, 0D, 00, 00, 86, 3F, 2C, 27)

AD_DEFAULT_UUID(3CC80282, 72A8, 11D4, B8, 0D, 00, 00, 86, 3F, 2C, 27)
AD_XCLASS_BEGIN(Concrete, Transient)
AD_XMETHOD3(ReadAt,
			[out\, size_is\(bufSize\)],
			objPass,
			aafMemPtr_t,
			buf,
			Buffer into which data is read,

			[in],
			objPass,
			aafUInt32,
			bufSize,
			Size of buf in bytes,

			[in],
			objPass,
			aafUInt64,
			position,
			The position in bytes at which to read,

     Attempts to read bufsize bytes from this stream at the given byte
  // offset.  Places the data into buf.  Any attempt to read beyond
  // the size of this file\, as reported by GetSize\(\)\, will be
  // considered an error.
  //
  // A value of zero for position indicates the beginning of the
  // stream.
  //
  // Succeeds if:
  // - The pNumBytes pointer is valid.
  // - position + buSize is not larger than the size of this file\, as
  //   reported by GetSize\(\).
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(buf\)
  //
  // AAFRESULT_OFFSET_SIZE
  //   - position + size is larger than the size of this file.)


AD_XMETHOD1(GetSize,
			[out],
			objPass,
			aafUInt64 *,
			pSize,
			The size of this file in bytes,

     Returns the size of this file\, in bytes\, in *pSize.
  //
  // Succeeds if:
  // - The pSize pointer is valid.
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(pSize\))
AD_XCLASS_END(Concrete, Transient)
