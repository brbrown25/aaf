#c/*************************************************\
#c*													*
#c* Advanced Authoring Format						*
#c*													*
#c* Copyright (c) 1998-1999 Avid Technology, Inc.	*
#c*													*
#c\*************************************************/
#startm .this-module 0
AAFTypeDefSet\
#endm
#c
#startm .parent-module 0
AAFTypeDef\
#endm
#c
AD_HEAD
AD_IDL(//
// This interface is used to define variably-sized Array types used in
// AAF persistent objects.
//
AD_STD_COMMENT_IFC_HEADER
AD_STD_COMMENT_IFC_STUB)
AD_FORWARD_DECLARATION(AAFPropertyValue)
AD_FORWARD_DECLARATION(EnumAAFPropertyValues)
AD_CLASS_UUID(381e1f21, e7bb, 11d2, 84, 2a, 00, 60, 08, 32, ac, b8)

AD_DEFAULT_UUID(381e1f22, e7bb, 11d2, 84, 2a, 00, 60, 08, 32, ac, b8)
AD_XCLASS_BEGIN(Concrete, StoredObject)
AD_XMETHOD3(Initialize,
			[in\, ref],
			objPass,
			aafUID_constref,
			id,
			auid to be used to identify this type,

			[in],
			objIn,
			AAFTypeDef,
			pTypeDef,
			type of each element to be contained in this set,

			[in],
			objPass,
			aafCharacter_constptr,
			pTypeName,
			friendly name of this type definition,

     Initializes this type def to contain elements of the given type.
  //
  // This method must be called after allocation\, and before
  // any other method can be called.
  //
  // Succeeds if:
  // - Initialize\(\) has not yet been called on this object.
  // - pTypeName is a valid pointer.
  //
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_ALREADY_INIT
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(pTypeName\))

AD_XMETHOD1(GetElementType,
			[out],
			objOut,
			AAFTypeDef,
			ppTypeDef,
			type of elements in this array,

     Returns the type of elements in this set.
  //
  // Succeeds if:
  // - Initialize\(\) has already been called on this object.
  // - ppTypeDef is a valid pointer.
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NO_INIT
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(ppTypeDef\))

AD_XMETHOD2(AddElement,
			[in],
			objIn,
			AAFPropertyValue,
			PSetPropVal,
			property value corresponding to set to which element is added,

			[in],
			objIn,
			AAFPropertyValue,
			pMemberPropVal,
			value to be added to this set,

			Adds an element to the set\, setting it to the
  // value given in pMemberPropVal.
  //
  // Succeeds if:
  // - Initialize\(\) has already been called on this object.
  // - PSetPropVal pointer is valid.
  // - pMemberPropVal pointer is valid.
  //
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(either PSetPropVal or pMemberPropVal\))

AD_XMETHOD2(RemoveElement,
			[in],
			objIn,
			AAFPropertyValue,
			PSetPropVal,
			property value corresponding to set from which element is removed,

			[in],
			objIn,
			AAFPropertyValue,
			pMemberPropVal,
			value to be removed from this set,

			Removes an element from the set.
  //
  // Succeeds if:
  // - Initialize\(\) has already been called on this object.
  // - PSetPropVal pointer is valid.
  // - pMemberPropVal pointer is valid.
  // - The given property member was in the set.
  //
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(either PSetPropVal or pMemberPropVal\))

AD_XMETHOD3(ContainsElement,
			[in],
			objIn,
			AAFPropertyValue,
			PSetPropVal,
			property value corresponding to set to which element is added,

			[in],
			objIn,
			AAFPropertyValue,
			pMemberPropVal,
			value whose presence is being tested in this set,

			[out],
			objPass,
			aafBool*,
			pContainsElement,
			value to be added to this set,

			Tests if an element is in the set.
  //
  // Succeeds if:
  // - Initialize\(\) has already been called on this object.
  // - PSetPropVal pointer is valid.
  // - pMemberPropVal pointer is valid.
  //
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(either PSetPropVal or pMemberPropVal\))



AD_XMETHOD2(GetCount,
			[in],
			objIn,
			AAFPropertyValue,
			pPropVal,
			property value of array,

			[out],
			objPass,
			aafUInt32 *,
			pCount,
			count of elements in the specified set property value,

     Returns number of elements in the referenced property value.
  //
  // Succeeds if:
  // - Initialize\(\) has already been called on this object.
  // - pPropVal is a valid pointer.
  // - pCount is a valid pointer.
  //
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NO_INIT
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(Either pPropVal or pCount\))


AD_XMETHOD3(CreateKey,
			[in],
			objPass,
			aafDataBuffer_t,
			pKeyPtr,
			Pointer to the key value bytes,

			[in],
			objPass,
			aafUInt32,
			pLength,
			The size of the key in bytes,

			[out],
			objOut,
			AAFPropertyValue,
			ppKey,
			An interface which may be passed to LookupKey\(\) or ContainsKey\(\),

     Returns number of elements in the referenced property value.
  //
  // Succeeds if:
  // - Initialize\(\) has already been called on this object.
  // - pPropVal is a valid pointer.
  // - pCount is a valid pointer.
  //
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NO_INIT
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(Either pPropVal or pCount\))


AD_XMETHOD3(LookupKey,
			[in],
			objIn,
			AAFPropertyValue,
			PSetPropVal,
			property value of set,

			[in],
			objIn,
			AAFPropertyValue,
			pKey,
			A key returned from CreateKey\(\),

			[out],
			objOut,
			AAFPropertyValue,
			pOutPropVal,
			The returned property value,

     Looks up the given key \(created by CreateKey\(\)\) and returns the propertyValue
  // of the entry\, or an error if the entry is not present.
  //
  // Succeeds if:
  // - Initialize\(\) has already been called on this object.
  // - pPropVal is a valid pointer.
  // - pCount is a valid pointer.
  // - An entry with the correct key is present in the set.
  //
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NO_INIT
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(Either PSetPropVal or PSetPropVal or pOutPropVal\))

AD_XMETHOD3(ContainsKey,
			[in],
			objIn,
			AAFPropertyValue,
			PSetPropVal,
			property value of set,

			[in],
			objIn,
			AAFPropertyValue,
			pKey,
			A key returned from CreateKey\(\),

			[out],
			objOut,
			AAFPropertyValue,
			pOutPropVal,
			Value returned is AAFTrue if an entry with the correct key is present,

     Looks up the given key \(created by CreateKey\(\)\) and returns AAFTrue if the entry
  // is present\, or AAFFalse if the entry is not present.
  //
  // Succeeds if:
  // - Initialize\(\) has already been called on this object.
  // - pPropVal is a valid pointer.
  // - pCount is a valid pointer.
  //
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NO_INIT
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(Either pPropVal or pCount\))


AD_XMETHOD2(GetElements,
			[in],
			objIn,
			AAFPropertyValue,
			PSetPropVal,
			property value to read,

			[out],
			objOut,
			EnumAAFPropertyValues,
			ppEnum,
			enumerator across property values,

     Returns an enumerator across elements in this set.
  // 
  // Succeeds if:
  // - Initialize\(\) has already been called on this object.
  // - The PSetPropVal pointer is valid.
  // - The ppEnum pointer is valid.
  //
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NO_INIT
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(Either PSetPropVal or ppEnum\))


AD_XCLASS_END(Concrete, StoredObject)
