#startm .this-module 0
AAFMob\
#endm
#c
#startm .parent-module 0
AAFObject\
#endm
#c
#import ./AAFObject.exp
AD_HEAD
/******************************************\
*                                          *
* Advanced Authoring Format                *
*                                          *
* Copyright (c) 1998 Avid Technology, Inc. *
* Copyright (c) 1998 Microsoft Corporation *
*                                          *
\******************************************/



AD_FORWARD_DECLARATION(AAFSegment)
AD_FORWARD_DECLARATION(AAFMobSlot)
AD_FORWARD_DECLARATION(AAFTimelineMobSlot)
AD_FORWARD_DECLARATION(AAFFile)
AD_FORWARD_DECLARATION(EnumAAFMobSlots)
AD_FORWARD_DECLARATION(EnumAAFMobComments)


AD_CLASS_UUID(B1A21375, 1A7D, 11d2, BF, 78, 00, 10, 4B, C9, 15, 6D)

AD_DEFAULT_UUID(B1A21374, 1A7D, 11d2, BF, 78, 00, 10, 4B, C9, 15, 6D)
AD_CLASS_BEGIN

AD_METHOD1(GetMobID,
[out], aafUID_t *, pMobID, The unique media object id,
This method returns the unique Mob ID associated with this mob.)

AD_METHOD1(SetMobID,
[in], aafUID_t *, pMobID, New Mob ID,
When a mob is initially created\\\, the Toolkit internally creates 
  // a mobID for the new mob.  This method should be used to change
  // the mob's identity to an explicit mobID.)

AD_METHOD2(GetName,
[in\\\,string], aafWChar *, pName, Mob Name,
[in], aafInt32,bufLen, length of the buffer to hold Mob Name,
This method will copy the mob name into the given string.)

AD_METHOD1(GetNameLen,
[out], aafInt32 *, pLen, Mob Name,
Returns the length of the string returned by the GetName and GetMobInfo methods.)

AD_METHOD1(SetName,
[in\\\, string], aafWChar *, pName, Mob Name,
This method sets the name property on a mob.)

AD_METHOD1(GetNumSlots,
[out], aafNumSlots_t *, pNumSlots, Number of slots,
This method returns the number of slots contained by this mob.)

AD_XMETHOD1(AppendSlot,
[in], objIn, AAFMobSlot, pSlot, Newly created slot,
Appends the given mob slot to the mob.)

AD_XMETHOD1(RemoveSlot,
[in], objIn, AAFMobSlot, pSlot, Existing slot in the mob,
Removes the given mob slot from this header.  If the given mob
  // slot is not found no action is taken and an error is returned.)

AD_XMETHOD1(EnumAAFAllMobSlots,
[out], objOut, EnumAAFMobSlots, ppEnum, Mob Slot Enumeration,
return an enumeration for all mob slots.)

AD_METHOD1(GetModTime,
[out], aafTimeStamp_t *, pLastModified, Modified Time,
This method will return the modification time for this mob.)

AD_METHOD1(SetModTime,
[in], aafTimeStamp_t *, pModTime, New Modification Time,
This method sets the modification time on a mob.  The
  // modification time is initially set to the time that the mob
  // was created.  The Toolkit does not maintain the modification
  // time every time that a mob has been updated.  Therefore\\\, this
  // method should be called explicitly to change the modification
  // time.)

AD_METHOD1(GetCreateTime,
[out], aafTimeStamp_t *, pCreationTime, Creation Time,
This method will return the creation time for this mob.)

AD_METHOD2(AppendComment,
[in\\\,string], aafWChar *, pCategory, Comment heading,
[in\\\,string], aafWChar *, pComment, Comment value,
Creates a user-defined comment and appends it to the specified Mob.)

AD_METHOD1(GetNumComments,
[out], aafUInt32 *, pNumComments, Number  of Mob Comments,
return total number of comments attached to this mob.)

AD_XMETHOD1(EnumAAFAllMobComments,
[out], objOut, EnumAAFMobComments, ppEnum, Mob Comments,
return the enumeration for all mob comments..)

AD_METHOD1(RemoveComment,
[in], aafMobComment_t *, pSlot, Number  of Mob Comments,
Remove a given comment from the mob.)

AD_METHOD1(IsAPrimaryMob,
[out], aafBool *, pRetval, Set to true if this is a primary mob,
This method will return true if this mob is a primary mob. If an error occurs
  // the retval will be false.)

AD_XMETHOD4(AppendNewSlot,
[in], objIn, AAFSegment, pSegment, Segment to append as slot component,
[in], objPass, aafSlotID_t, slotID, new slot ID,
[in\, string], objPass, aafWChar *,pSlotName, new slot name,
[out], objOut, AAFMobSlot, ppNewSlot, Newly created slot,
This method creates a new mob slot with the given property values and appends it to the input mob.)

AD_XMETHOD6(AppendNewTimelineSlot,
[in], objPass, aafRational_t, editRate, Edit rate property value,
[in], objIn, AAFSegment, pSegment, Segment to append as slot component,
[in], objPass, aafSlotID_t, slotID, new slot ID,
[in\, string], objPass, aafWChar *,pSlotName, new slot name,
[in], objPass, aafPosition_t, origin, The slot origin,
[out], objOut, AAFTimelineMobSlot, ppNewSlot, Newly created slot,
This method creates a new timeline mob slot with the given property values and appends it to the input mob.)

AD_METHOD4(GetMobInfo,
[out], aafTimeStamp_t *, pLastModified, Modified Time,
[out], aafTimeStamp_t *, pCreationTime, Creation Time,
[out\\\, size_is\\\(strSize\\\)\\\, string], aafWChar *, pName, Mob Name,
[in], aafInt32, strSize, size of the supplied buffer.,
This method will all mob property information is a single call.)



AD_METHOD3(SetNewProps,
[in], aafBool, isMasterMob, Whether or not this is a Master Mob,
[in\\\,string], aafWChar *, pName, Mob Name \\\(optional\\\),
[in], aafBool, isPrimary, Whether or not this is a primary mob,
This method is called to create the new properties on a mob.)


AD_METHOD1(SetPrimary,
[in], aafBool, isPrimary, Whether or not the mob is a primary mob,
This method is used to either add a mob to the HEAD Primary Mob
  // index or to take it out of the index.)

AD_XMETHOD3(OffsetToMobTimecode,
[in], objIn, AAFSegment, pTcSlotID, Current slot,
[in], objPass, aafPosition_t *, pOffset, Offset into segment,
[out], objPass, aafTimecode_t *, pResult, The resulting timecode,
This method will all mob property information is a single call.)

AD_XMETHOD2(FindSlotBySlotID,
[in], objPass, aafSlotID_t, slotID, The requested slot id,
[out], objOut, AAFMobSlot, ppDestSlot, The requested slot,
The method will find the mob slot for the given slot id.)

AD_METHOD2(ChangeRef,
[in], aafUID_t *, pOldMobID, Old Mob ID reference in source clip,
[in], aafUID_t *, pNewMobID, New Mob ID reference in source clip,
Finds all Source Clips in the specified Mob that refer to the specified old Mob\\\,
  // and changes the references to point to the new Mob.
  // @commThis function traverses through the entire structure of the input Mob looking
  // for Source Clips\\\, and changes the sourceID property on all Source Clips with
  // oldMobID to newMobID.)

AD_XMETHOD4(CloneExternal,
[in], objPass, aafDepend_t, resolveDependencies, Whether to clone dependent mobs,
[in], objPass, aafIncMedia_t, includeMedia, Whether to include media data,
[in], objIn, AAFFile, pDestFile, Destination AAF File,
[out], objOut, AAFMob, ppDestMob, Destination Mob,
Clones the specified Source Mob\, and optionally all dependent Mobs\, to an
  // external file\, keeping the same MobID.
  // @commThis function clones the specified Source Mob in the source file into a destina\-
  // tion Mob\, with the same MobID\, in the destination file. If resolveDependencies is
  // kFollowDepend\, the function also clones all Mobs referenced by the speci\-
  // fied Source Mob.
  // If includeMedia is kIncludeMedia\, the function also copies the media data
  // associated with the Source Mob\, returns the destination Mob\, and clones all
  // private data.
  // If the media data is not in the file\, the function does not attempt to find it in
  // another file and clone it.
  // Both AAF files must be open before you call this function and both must have
  // the same AAF Version number.)

AD_XMETHOD2(Copy,
[in\,string], objPass, aafWChar *, pDestMobName, Optional Input. The name to be assigned to the new copy of the Mob.
  // The destMobName argument is optional. Specify a NULL value if no desti\-
  // nation Mob name is desired.,
[out], objOut, AAFMob, ppDestMob, Destination Mob,
  // This function copies the specified Mob into a destination Mob in the same
  // OMF file. The new Mob is returned through the destMob parameter. The func\-
  // tion gives the destination Mob a new MobID and the name specified in the
  // destMobName parameter. The function also copies all private data.)

AD_CLASS_END


////////////////////////////////////////////////////////////////////////////////
