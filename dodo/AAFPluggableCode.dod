#startm .this-module 0
AAFPluggableCode\
#endm
#c
#startm .parent-module 0
AAFObject\
#endm
#c
AD_HEAD
AD_IDL(//
// This interface is describes an object which holds executable object code inside of
// an AAF file.  This may be useful for specific cases\, but in has problems with cross
// platform uses of the files\, and with copy protection issues.
//
// The interface and properties of the object code are defined by an AAFPluginDescriptor\,
// which has a descriptorID which matches the ID stored here.
//
// In addition to the specific error results listed for each method\,
// all methods in this interface may also return one of the following
// values:
// 
// AAFRESULT_NOMEMORY
//   - insufficient system memory is available to perform the
//     operation.
//)

/***********************************************\
*												*
* Advanced Authoring Format						*
*												*
* Copyright (c) 1998-1999 Avid Technology, Inc. *
* Copyright (c) 1998-1999 Microsoft Corporation *
*												*
\***********************************************/

AD_FORWARD_DECLARATION(AAFPluginDescriptor)

/***********************************************\
*	Stub only.   Implementation not yet added	*
\***********************************************/

AD_CLASS_UUID(AD1BB851, DBB2, 11d2, 80, 9C, 00, 60, 08, 14, 3E, 6F)

AD_DEFAULT_UUID(AD1BB852, DBB2, 11d2, 80, 9C, 00, 60, 08, 14, 3E, 6F)

AD_XCLASS_BEGIN(Concrete, StoredObject)

AD_XMETHOD1(GetObjectCode,
		   [out\, retval],
		    objPass,
		    aafDataBuffer_t*,
		    pObjectCode,
		    Pointer to executable code,
		    Returns a pointer to the executable code\, which must be cast before using.
	//
	// Returns one of the following:
	//
	// AAFRESULT_SUCCESS
	//   - succeeded.  \(This is the only code indicating success.\) )

AD_XMETHOD1(SetDescriptorID,
		   [in],
		    objPass,
		    aafUID_t,
		    pDescriptorID,
		    The descriptor which matches this AAFPluggableCode object,
		    Sets the ID of the descriptor which matches this AAFPluggableCode object
	// Returns one of the following:
	//
	// AAFRESULT_SUCCESS
	//   - succeeded.  \(This is the only code indicating success.\) )

AD_XMETHOD1(GetDescriptorID,
		   [out\, retval],
		    objPass,
		    aafUID_t*,
		    pDescriptorID,
		    The descriptor ID,
		    Gets the ID of the descriptor which matches this AAFPluggableCode object
	// Returns one of the following:
	//
	// AAFRESULT_SUCCESS
	//   - succeeded.  \(This is the only code indicating success.\) )

AD_XMETHOD1(GetPluginDescriptor,
		   [out\, retval],
		    objOut,
		    AAFPluginDescriptor,
			pDescriptor,
		    The ID of the descriptor which matches this AAFPluggableCode object,
		    Gets the descriptor object which matches this AAFPluggableCode object.
	// Returns one of the following:
	//
	// AAFRESULT_SUCCESS
	//   - succeeded.  \(This is the only code indicating success.\) )


AD_XCLASS_END(Concrete, StoredObject)
