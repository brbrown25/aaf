#c *********************************************************************
#c
#c The contents of this file are subject to the AAF SDK Public
#c Source License Agreement (the "License"); You may not use this file
#c except in compliance with the License.  The License is available in
#c AAFSDKPSL.TXT, or you may obtain a copy of the License from the AAF
#c Association or its successor.
#c 
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.
#c 
#c The Original Code of this file is Copyright 1998-2001, Licensor of the
#c AAF Association.
#c 
#c The Initial Developer of the Original Code of this file and the
#c Licensor of the AAF Association is Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFPluggableCode\
#endm
#c
#startm .parent-module 0
AAFObject\
#endm
#c
AD_HEAD
AD_IDL(//
// This interface is describes an object which holds executable object
// code inside of an AAF file.  This may be useful for specific
// cases\, but in has problems with cross platform uses of the files\,
// and with copy protection issues.
//
// The interface and properties of the object code are defined by an
// AAFPluginDescriptor\, which has a descriptorID which matches the ID
// stored here.
//
// In addition to the specific error results listed for each method\,
// all methods in this interface may also return one of the following
// values:
// 
// AAFRESULT_NOMEMORY
//   - insufficient system memory is available to perform the
//     operation.
//)
AD_FORWARD_DECLARATION(AAFPluginDescriptor)
/***********************************************\
*	Stub only.   Implementation not yet added	*
\***********************************************/
AD_CLASS_UUID(AD1BB851, DBB2, 11d2, 80, 9C, 00, 60, 08, 14, 3E, 6F)

AD_DEFAULT_UUID(AD1BB852, DBB2, 11d2, 80, 9C, 00, 60, 08, 14, 3E, 6F)
AD_XCLASS_BEGIN(Concrete, StoredObject)
AD_XMETHOD1(GetObjectCode,
		   [out\, retval],
		    objPass,
		    aafDataBuffer_t*,
		    pObjectCode,
		    Pointer to executable code,
     Returns a pointer to the executable code\, which must be cast
  // before using. 
  //
  // Returns one of the following:
  //
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\) )


AD_XMETHOD1(SetDescriptorID,
		   [in\, ref],
		    objPass,
		    aafUID_constref,
		    pDescriptorID,
		    The descriptor which matches this AAFPluggableCode object,
     Sets the ID of the descriptor which matches this AAFPluggableCode
  // object.
  // Returns one of the following:
  //
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\) )


AD_XMETHOD1(GetDescriptorID,
		   [out\, retval],
		    objPass,
		    aafUID_t*,
		    pDescriptorID,
		    The descriptor ID,
     Gets the ID of the descriptor which matches this AAFPluggableCode
  // object.
  // Returns one of the following:
  //
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\) )


AD_XMETHOD1(GetPluginDescriptor,
		   [out\, retval],
		    objOut,
		    AAFPluginDescriptor,
			pDescriptor,
       The ID of the descriptor which matches this AAFPluggableCode
	// object,
     Gets the descriptor object which matches this AAFPluggableCode
  // object.
  // Returns one of the following:
  //
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\) )


AD_XCLASS_END(Concrete, StoredObject)
