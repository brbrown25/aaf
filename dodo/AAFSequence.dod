#startm .this-module 0
AAFSequence\
#endm
#c
#startm .parent-module 0
AAFSegment\
#endm
#c
#import ./AAFSegment.exp
AD_HEAD
/******************************************\
*                                          *
* Advanced Authoring Format                *
*                                          *
* Copyright (c) 1998 Avid Technology, Inc. *
* Copyright (c) 1998 Microsoft Corporation *
*                                          *
\******************************************/
AD_FORWARD_DECLARATION(AAFTimecode)
AD_FORWARD_DECLARATION(AAFComponent)
AD_FORWARD_DECLARATION(AAFSegment)

AD_CLASS_UUID(66e855f1, 2bc2, 11d2, bf, aa, 00, 60, 97, 11, 62, 12)

AD_DEFAULT_UUID(66e855f0, 2bc2, 11d2, bf, aa, 00, 60, 97, 11, 62, 12)
AD_CLASS_BEGIN

AD_XMETHOD1(SetInitialValue,
			[in],objIn, AAFDataDef, datadef, Data Definition object,
// This function creates a new sequence object with the given
// property values.  The length of the sequence is initially set to
// 0.  When components are appended to the sequence with the
// omfiSequenceAppendCpnt\(\) call\, the length of the appended
// component is added to the length of the sequence.)

AD_XMETHOD1(AppendCpnt,
			[in],objIn,AAFComponent,component,
		  Component to append to the sequence,
  // This function appends the input component to the given sequence\,
  // enforcing bottom up creation of mobs.  The length of the sequence
  // is incremented by the size of the component\, unless the component
  // is a transition.  If the component is a transition\, it verifies
  // that it is not the first object in a transition\, and that it is
  // not neighboring another transition.  It also verifies that there
  // is enough source material on either side of the transition.  The
  // function also verifies that the datakinds are compatible.)

AD_METHOD1(GetNumCpnts,
		   [out],aafInt32 *,numCpnts,Number of components in sequence,
  // This set of functions returns the required property values for
  // the object identified by XXX.  If a value is not requested\\\, a
  // NULL should be passed into the parameter corresponding to that
  // property. For example --
  //          omfiMobSlotInfo\\\(file\\\, slotObj\\\, NULL\\\, &segment\\\);
  // would not return the editRate property from a mob slot.
  // Additional functions are provided to return optional properties.)

AD_OVERRIDE(.method-SegmentOffsetToTC)
AD_OVERRIDE(.method-SegmentTCToOffset)

AD_CLASS_END
