#startm .this-module 0
AAFEssenceMultiAccess\
#endm
#c
AD_HEAD
/************************************************\
*											    *
* Advanced Authoring Format					    *
*										        *
* Copyright (c) 1998-1999 Avid Technology, Inc. *
*										        *
\************************************************/

AD_IDL(//
// AAFEssenceMultiAccess is an interace which provides streaming access over essence data.  This
// interfaces deals with essence data which is in an uncompressed form\, and handles compression
// or decompression of the data if required.
//
// You should call the CreateMultiEssence or OpenMultiEssence calls on AAFMasterMob in order to get an
// interface pointer to AAFEssenceAccess\, as there is no public create or open method in the interface.
//
// Objects implementing this interface also implement AAFEssenceAccess
// for operations other than read and write.
//
// A number of errors can be returned from most method calls\,  These are:
//		AAFRESULT_NOMEMORY -- The system ran out of memory processing the method
//		AAFRESULT_NULL_PARAM -- A NULL parameter was passed in which was required.
)

AD_FORWARD_DECLARATION(AAFSourceMob)
AD_FORWARD_DECLARATION(AAFSourceClip)
AD_FORWARD_DECLARATION(AAFEssenceFormat)
AD_FORWARD_DECLARATION(AAFLocator)

AD_CLASS_UUID(D815E2B3, 2425, 11d3, 80, AD, 00, 60, 08, 14, 3E, 6F)

AD_DEFAULT_UUID(D815E2B4, 2425, 11d3, 80, AD, 00, 60, 08, 14, 3E, 6F)
AD_XCLASS_BEGIN(Abstract, Transient)

/****/
AD_METHOD3(WriteMultiSamples,
	[in],
	aafUInt16,
	arrayElemCount,
	Do this many transfers,
	[in\\\,size_is\\\(arrayElemCount\\\)],
	aafmMultiXfer_t *,
	xferArray,
	referencing this array,
	[out\\\,size_is\\\(arrayElemCount\\\)],
	aafmMultiResult_t *,
	resultArray,
	putting results into this array,
	Writes multiple channels worth of sample data to an interleaved data stream in the natural order for the CODEC.
// The multiXfer_t structure has the following fields\\\, which specify one channel of data:
//		essenceDef		[IN] -- The essence type definition
//		physical		[IN] - The physical input-output channel
//		numSamples		[IN] -- The number of samples to transfer
//		buflen			[IN] -- The size of the buffer
//		buffer			[IN] -- The buffer for this
// The multiResult_t structure has the following fields\\\, which return result for one channel of data:
//		bytesXfered		[OUT] -- The total number of bytes transferred
//		samplesXfered	[OUT] -- The total number of samples transferred
)
	//@comm arrayElemCount is the number of elementss in the array of transfer operations.
	// xferArray points to an array of transfer parameters.  All fields
	// in this array except for bytesXferred must be set up before
	// doing the transfer.  Some of the fields in the xferArray structure are status results
	// like bytesXferred and samplesXferred.

/****/
AD_XMETHOD3(ReadMultiSamples,
	[in],
	objPass,
	aafUInt16,
	elemCount,
	Do this many transfers,
	[in\, size_is\(elemCount\)],
	objPass,
	aafmMultiXfer_t *,
	xferArray,
	referencing this array,
	[out\, size_is\(elemCount\)],
	objPass,
	aafmMultiResult_t *,
	resultArray,
	putting results into this array,
	Reads one or more channels from an interleaved data stream.)
// The multiXfer_t structure has the following fields\, which specify one channel of data:
//		essenceDef		[IN] -- The essence type definition
//		physical		[IN] - The physical input-output channel
//		numSamples		[IN] -- The number of samples to transfer
//		buflen			[IN] -- The size of the buffer
//		buffer			[IN] -- The buffer for this
// The multiResult_t structure has the following fields\, which return result for one channel of data:
//		bytesXfered		[OUT] -- The total number of bytes transferred
//		samplesXfered	[OUT] -- The total number of samples transferred
	//@comm arrayElemCount is the size of the array or transfer operations.
	// xferArray points to an array of transfer parameters.  All fields
	// in this array except for bytesXferred must be set up before
	// doing the transfer.  Some of the fields in the xferArray structure are status results
	// like bytesXferred and samplesXferred.
	//@comm Possible Errors:
	// 	Standard errors \(see top of file\).
	// 	AAFRESULT_END_OF_ESSENCE -- Hit the end of the essence \(like EOF\) while reading.

AD_XCLASS_END(Abstract, Transient)
