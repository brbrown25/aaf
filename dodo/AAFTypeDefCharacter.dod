#c *********************************************************************
#c
#c $Id: AAFTypeDefCharacter.dod,v 1.5 2005/02/10 17:47:26 heydowns Exp $ $Name:  $
#c
#c The contents of this file are subject to the AAF SDK Public
#c Source License Agreement (the "License"); You may not use this file
#c except in compliance with the License.  The License is available in
#c AAFSDKPSL.TXT, or you may obtain a copy of the License from the AAF
#c Association or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.
#c
#c The Original Code of this file is Copyright 1998-2004, Licensor of the
#c AAF Association.
#c
#c The Initial Developer of the Original Code of this file and the
#c Licensor of the AAF Association is Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFTypeDefCharacter\
#endm
#c
#startm .parent-module 0
AAFTypeDef\
#endm
#c
#import ./AAFTypeDef.exp
AD_HEAD
AD_IDL(///
/// This interface is used to define Integer types used in AAF persistent
/// objects.
AD_STD_COMMENT_IFC_HEADER)
AD_FORWARD_DECLARATION(AAFPropertyValue)

AD_CLASS_UUID(FE717CA9, F04C, 11d3, 80, 0B, 00, 10, 4B, C9, 15, 6D)

AD_DEFAULT_UUID(FE717CAA, F04C, 11d3, 80, 0B, 00, 10, 4B, C9, 15, 6D)
AD_XCLASS_BEGIN(Concrete, StoredObject)

AD_XMETHOD2(CreateValueFromCharacter,
		[in],
		objPass,
		aafCharacter,
		character,
		character data to write the the new value,

		[out],
		objOut,
		AAFPropertyValue,
		ppCharacterValue,
		character property value with the given character,

     Gets a property value corresponding to the character data. 
  /// 
  /// Succeeds if:
  /// - Initialize\(\) has already been called on this object.
  /// - The pCharacterValue pointer is valid.
  /// - The ppActualPropertyValue pointer is valid.
  AD_STD_COMMENT_METH_ERR_HEADER
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - ppCharacterValue is not a valid pointer.
  ///)

AD_XMETHOD2(GetCharacter,
		[in],
		objIn,
		AAFPropertyValue,
		pCharacterValue,
		character property value to read,

		[out],
		objPass,
		aafCharacter *,
		pCharacter,
		character that is read,

     Gets a character from the property value. 
  /// 
  /// Succeeds if:
  /// - Initialize\(\) has already been called on this object.
  /// - The pCharacterValue pointer is valid.
  /// - The ppActualPropertyValue pointer is valid.
  AD_STD_COMMENT_METH_ERR_HEADER
  ///
  /// AAFRESULT_ILLEGAL_VALUE
  ///   - pCharacterValue is not a valid character property value.
  ///)

AD_XMETHOD2(SetCharacter,
		[in],
		objIn,
		AAFPropertyValue,
		pCharacterValue,
		character property value to modify,

		[in],
		objPass,
		aafCharacter,
		character,
		character that is written,

     Sets a character into the given property value. 
  /// 
  /// Succeeds if:
  /// - Initialize\(\) has already been called on this object.
  /// - The pCharacterValue pointer is valid.
  AD_STD_COMMENT_METH_ERR_HEADER
  ///
  /// AAFRESULT_ILLEGAL_VALUE
  ///   - pCharacterValue is not a valid character property value.
  ///)

AD_OVERRIDE(.method-GetTypeCategory)

AD_XCLASS_END(Concrete, StoredObject)
