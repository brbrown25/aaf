#c *********************************************************************
#c
#c $Id: AAFSourceReference.dod,v 1.15.2.2 2004/05/03 01:14:36 jptrainor Exp $ $Name:  $
#c
#c The contents of this file are subject to the AAF SDK Public
#c Source License Agreement (the "License"); You may not use this file
#c except in compliance with the License.  The License is available in
#c AAFSDKPSL.TXT, or you may obtain a copy of the License from the AAF
#c Association or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.
#c
#c The Original Code of this file is Copyright 1998-2004, Licensor of the
#c AAF Association.
#c
#c The Initial Developer of the Original Code of this file and the
#c Licensor of the AAF Association is Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFSourceReference\
#endm
#c
#startm .parent-module 0
AAFSegment\
#endm
#c
#c #import ./AAFSegment.dod
#import ./AAFSourceReference2.exp
AD_HEAD
AD_IDL(//
// The IAAFSourceReference interface is implemented by objects that
// represent the essence or other data described by a MobSlot in a
// Mob.
//
// In addition to the specific error results listed for each method\,
// all methods in this interface may also return one of the following
// values:
// 
// AAFRESULT_NOMEMORY
//   - insufficient system memory is available to perform the
//     operation.
//
// AAFRESULT_NOT_INITIALIZED
//   - This object has not yet had Initialize\(\) called on it through
//     this object's primary interface.  Note that IAAFSourceReference
//     is a primary interface for an abstract class\, so it is not
//     appropriate for the Initialize\(\) method to exist in this
//     interface.  The Initialize\(\) method is available through the
//     concrete object's primary interface.
//)
AD_CLASS_UUID(92B88034, 2B2B, 11d2, BF, 7E, 00, 10, 4B, C9, 15, 6D)

AD_DEFAULT_UUID(92B88033, 2B2B, 11d2, BF, 7E, 00, 10, 4B, C9, 15, 6D)
AD_COM_EXT_CLASS_BEGIN(public IAAFSourceReference2)
AD_XMETHOD1(GetSourceID,
			[retval][out],
			objPass,
			aafMobID_t *,
			pSourceID,
			Place to put source ID,

			Gets the SourceID and places it into the pSourceID argument.
  //
  // Succeeds if all of the following are true:
  // - the pSourceID pointer is valid.
  // 
  // If this method fails nothing will be written to *pSourceID.
  // 
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\)
  //
  // AAFRESULT_NULL_PARAM
  //   - pSourceID arg is NULL.)


AD_XMETHOD1(SetSourceID,
			[in],
			objPass,
			aafMobID_constref ,
			sourceID,
			Source ID to set,

			Sets the SourceID using the sourceID argument.
  // 
  // Always succeeds.
  // 
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\))


AD_XMETHOD1(GetSourceMobSlotID,
			[retval][out],
			objPass,
			aafSlotID_t *,
			pMobSlotID,
			Place to put source mob slot ID,

			Gets the Mob Slot ID and places it into the pMobSlotID argument.
  //
  // Succeeds if all of the following are true:
  // - the pMobSlotID pointer is valid.
  // 
  // If this method fails nothing will be written to *pMobSlotID.
  // 
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\)
  //
  // AAFRESULT_NULL_PARAM
  //   - pMobSlotID arg is NULL.)


AD_XMETHOD1(SetSourceMobSlotID,
			[in],
			objPass,
			aafSlotID_t ,
			mobSlotID,
			Source Mob ID to set,

			Sets the mob slot ID using the mobSlotID argument.
  // 
  // Succeeds if all of the following are true:
  // - \(preconditions here\)
  // 
  // If this method fails no state will be changed.
  // 
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\)
  //
  // \(other error codes here.\))

#c
#c SourceReference2 methods
#c

AD_COM_METH(.method-SetChannelIDs)
AD_COM_METH(.method-GetChannelIDs)
AD_COM_METH(.method-GetChannelIDsSize)
AD_COM_METH(.method-SetMonoSourceSlotIDs)
AD_COM_METH(.method-GetMonoSourceSlotIDs)
AD_COM_METH(.method-GetMonoSourceSlotIDsSize)

AD_COM_EXT_CLASS_END(AAFSourceReference2)
