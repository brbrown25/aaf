#c/*************************************************\
#c*													*
#c* Advanced Authoring Format						*
#c*													*
#c* Copyright (c) 1998-1999 Avid Technology, Inc.	*
#c*													*
#c\*************************************************/
#startm .this-module 0
AAFSourceReference\
#endm
#c
#startm .parent-module 0
AAFSegment\
#endm
#c
#c #import ./AAFSegment.dod
AD_HEAD
AD_IDL(//
// The IAAFSourceReference interface is implemented by objects that
// represent the essence or other data described by a MobSlot in a
// Mob.
//
// In addition to the specific error results listed for each method\,
// all methods in this interface may also return one of the following
// values:
// 
// AAFRESULT_NOMEMORY
//   - insufficient system memory is available to perform the
//     operation.
//
// AAFRESULT_NOT_INITIALIZED
//   - This object has not yet had Initialize\(\) called on it through
//     this object's primary interface.  Note that IAAFSourceReference
//     is a primary interface for an abstract class\, so it is not
//     appropriate for the Initialize\(\) method to exist in this
//     interface.  The Initialize\(\) method is available through the
//     concrete object's primary interface.
//)
AD_CLASS_UUID(92B88034, 2B2B, 11d2, BF, 7E, 00, 10, 4B, C9, 15, 6D)

AD_DEFAULT_UUID(92B88033, 2B2B, 11d2, BF, 7E, 00, 10, 4B, C9, 15, 6D)
AD_XCLASS_BEGIN(Abstract, StoredObject)
AD_XMETHOD1(GetSourceID,
			[retval][out],
			objPass,
			aafUID_t *,
			pSourceID,
			Place to put source ID,

			Gets the SourceID and places it into the pSourceID argument.
  //
  // Succeeds if all of the following are true:
  // - the pSourceID pointer is valid.
  // 
  // If this method fails nothing will be written to *pSourceID.
  // 
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\)
  //
  // AAFRESULT_NULL_PARAM
  //   - pSourceID arg is NULL.)


AD_XMETHOD1(SetSourceID,
			[in],
			objPass,
			aafUID_t ,
			sourceID,
			Source ID to set,

			Sets the SourceID using the sourceID argument.
  // 
  // Always succeeds.
  // 
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\))


AD_XMETHOD1(GetSourceMobSlotID,
			[retval][out],
			objPass,
			aafSlotID_t *,
			pMobSlotID,
			Place to put source mob slot ID,

			Gets the Mob Slot ID and places it into the pMobSlotID argument.
  //
  // Succeeds if all of the following are true:
  // - the pMobSlotID pointer is valid.
  // 
  // If this method fails nothing will be written to *pMobSlotID.
  // 
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\)
  //
  // AAFRESULT_NULL_PARAM
  //   - pMobSlotID arg is NULL.)


AD_XMETHOD1(SetSourceMobSlotID,
			[in],
			objPass,
			aafSlotID_t ,
			mobSlotID,
			Source Mob ID to set,

			Sets the mob slot ID using the mobSlotID argument.
  // 
  // Succeeds if all of the following are true:
  // - \(preconditions here\)
  // 
  // If this method fails no state will be changed.
  // 
  // This method will return the following codes.  If more than one of
  // the listed errors is in effect\, it will return the first one
  // encountered in the order given below:
  // 
  // AAFRESULT_SUCCESS
  //   - succeeded.  \(This is the only code indicating success.\)
  //
  // \(other error codes here.\))
AD_XCLASS_END(Abstract, StoredObject)
