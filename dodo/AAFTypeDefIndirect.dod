#c/*************************************************\
#c*                                                 *
#c* Advanced Authoring Format                       *
#c*                                                 *
#c* Copyright (c) 1998-2000 Avid Technology, Inc.   *
#c*                                                 *
#c\*************************************************/
#startm .this-module 0
AAFTypeDefIndirect\
#endm
#c
#startm .parent-module 0
AAFTypeDef\
#endm
#c
#import ./AAFTypeDef.exp
AD_HEAD
AD_IDL(//
// This interface is used to define Integer types used in AAF persistent
// objects.
AD_STD_COMMENT_IFC_HEADER)
AD_FORWARD_DECLARATION(AAFPropertyValue)

AD_CLASS_UUID(FE717CA7, F04C, 11d3, 80, 0B, 00, 10, 4B, C9, 15, 6D)

AD_DEFAULT_UUID(FE717CA8, F04C, 11d3, 80, 0B, 00, 10, 4B, C9, 15, 6D)
AD_XCLASS_BEGIN(Concrete, StoredObject)


AD_XMETHOD2(CreateValueFromActualValue,
			[in],
			objIn,
			AAFPropertyValue,
			pActualValue,
			pointer to actual value,

			[out],
			objOut,
			AAFPropertyValue,
			ppPropVal,
			newly created property value,

     Creates an indirect property value which contains the actual type.  
  // Returns the newly-created property value in ppPropVal.
  //
  // Succeeds if all of the following are true:
  // - the pActualValue pointer is valid.
  // - the ppPropVal pointer is valid.
  //
  // If this method fails nothing will be written to *ppPropVal.
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NO_INIT
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(either pActualValue or ppPropVal\)
  //
  // AAFRESULT_ILLEGAL_VALUE
  //   - initDataSize indicates pInitData is of the wrong size.
  //
  // AAFRESULT_NOT_REGISTERED
  //  - struct offsets have not yet been registered for this typedef.)

AD_XMETHOD4(CreateValueFromActualData,
		[in],
		objIn,
		AAFTypeDef,
		pActualType,
		the actual type of the data,

		[in\, size_is\(initDataSize\)],
		objPass,
		aafMemPtr_t,
		pInitData,
		pointer to buffer containing data to use,

		[in],
		objPass,
		aafUInt32,
		initDataSize,
		size of data in pInitData,

		[out],
		objOut,
		AAFPropertyValue,
		ppPropVal,
		newly created property value,

     Creates an indirect property value which contains data of the 
  // actual type.  Returns the newly-created property value in
  // ppPropVal.
  //
  // Succeeds if all of the following are true:
  // - the pActualType pointer is valid and registered
  // - the pInitData pointer is valid.
  // - the ppPropVal pointer is valid.
  // - initDataSize indicates pInitData is the correct size for 
  //   the actual type.
  // - compile-time struct has had its member offests registered.
  //
  // If this method fails nothing will be written to *ppPropVal.
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NO_INIT
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(either pActualType or InitData or ppPropVal\)
  //
  // AAFRESULT_ILLEGAL_VALUE
  //   - initDataSize indicates pInitData is of the wrong size.
  //
  // AAFRESULT_NOT_REGISTERED
  //  - struct offsets have not yet been registered for this typedef.)


AD_XMETHOD2(GetActualValue,
		[in],
		objIn,
		AAFPropertyValue,
		pInPropVal,
		indirect property value to read,

		[out],
		objOut,
		AAFPropertyValue,
		ppOutPropVal,
		value that is read,

     Gets a property value corresponding to the actual data. 
  // 
  // Succeeds if:
  // - Initialize\(\) has already been called on this object.
  // - The pInPropVal pointer is valid.
  // - The ppOutPropVal pointer is valid.
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NO_INIT
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(either pInPropVal or ppOutPropVal\)
  //)

AD_XMETHOD3(GetActualData,
			[in],
			objIn,
			AAFPropertyValue,
			pPropVal,
			indirect property value to read,
			
			[out\, size_is\(dataSize\)],
			objPass,
			aafMemPtr_t,
			pData,
			buffer into which actual data should be written,

			[in],
			objPass,
			aafUInt32,
			dataSize,
			size of pData buffer in bytes,

     Copies all the actual data contained in the given indirect property value\,
  // interpreted as the actual type for this indirect property value\, into the 
  // buffer pointed to by pData.
  //
  // Succeeds if all of the following are true:
  // - the pPropVal pointer is valid.
  // - the pData pointer is valid.
  // - dataSize indicates pData is large enough to hold the data.
  //
  // If this method fails nothing will be written to *ppPropVal.
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NO_INIT
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(either pPropVal or pData\)
  //
  // AAFRESULT_ILLEGAL_VALUE
  //   - dataSize indicates pData is too small.
  //
  // AAFRESULT_NOT_REGISTERED
  //  - struct offsets have not yet been registered for 
  //    the actual typedef.)

AD_OVERRIDE(.method-GetTypeCategory)

AD_XCLASS_END(Concrete, StoredObject)
