#c /******************************************\
#c *                                          *
#c * Advanced Authoring Format                *
#c *                                          *
#c * Copyright (c) 1998 Avid Technology, Inc. *
#c * Copyright (c) 1998 Microsoft Corporation *
#c *                                          *
#c \******************************************/



#ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
#c
#c AutoDodo macro file for use in intermediate export files for use in
#c other AutoDodo source files.
#c
#ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc


#import macros/base.mac


#ccccccccccccccccccccccccccc
#c
#c Includes another file.
#c
#c Argument: Base filename
#c
#startm AD_INCLUDE 01
#endm


#ccccccccccccccccccccccccccc
#c
#c Starts a class definition
#c
#c Arguments: none
#c
#startm AD_CLASS_BEGIN 00
#endm


#ccccccccccccccccccccccccccc
#c
#c Starts a class definition with no parent class
#c
#c Arguments: none
#c
#startm AD_ROOT_CLASS_BEGIN 00
#endm

#ccccccccccccccccccccccccccc
#c
#c Types definitions should only be used by idl and c++ & impl headers
#c 
#c Argument: Pieces of UUID
#c
#c Example:
#c AD_TYPES_BEGIN(b1a21372, 1a7d, 11d2, bf, 78, 00, 10, 4b, c9, 15, 6d)
#c
#c TomR:980716: Added
#c
#startm AD_TYPES_BEGIN 11
#endm


#ccccccccccccccccccccccccccc
#c
#c Ends a types definition
#c
#c Types definitions should only be used by idl and c++ & impl headers
#c
#c Arguments: none
#c
#startm AD_TYPES_END 00
#endm


#ccccccccccccccccccccccccccc
#c
#c Argument1: base name to be converted to output type.
#c
#startm AD_AAFTYPES 01
#endm


#ccccccccccccccccccccccccccc
#c
#c Argument1: base name to be converted to output type.
#c
#startm AD_DECLARE_FORWARD_AAFTYPES 01
#endm

#ccccccccccccccccccccccccccc
#c
#c Argument1: text to be quoted.
#c 
#c Ignore input 
#c
#startm AD_CPP_QUOTE 01
#endm

#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes no arguments.
#c
#c Argument1: method name
#c Argument2: method description
#c
#startm AD_METHOD0 02
\\\#startm .method-%01 00
  // Override from .this-module
  virtual AAFRESULT STDMETHODCALLTYPE
    %01 ();\\
\\\#endm
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes one argument.
#c
#c Macro Arg 01: method name
#c
#c Macro arguments 02+:
#c 
#c meth arg #   arg modfrs   obj style   type    name    arg cmnt
#c ----------   ----------   ---------   ----    ----    --------
#c metharg 1    02           03          04      05      06
#c
#c Macro Arg 07: method description
#c
#startm AD_XMETHOD1 07
\\\#startm .method-%01 00
  // Override from .this-module
  virtual AAFRESULT STDMETHODCALLTYPE
    %01 (/*%02*/ %04 .%03-indirection %05);\\
\\\#endm
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes two arguments.
#c
#c Macro Arg 01: method name
#c
#c Macro arguments 02+:
#c 
#c meth arg #   arg modfrs   obj style   type    name    arg cmnt
#c ----------   ----------   ---------   ----    ----    --------
#c metharg 1    02           03          04      05      06
#c metharg 2    07           08          09      10      11
#c
#c Macro Arg 12: method description
#c
#startm AD_XMETHOD2 12
\\\#startm .method-%01 00
  // Override from .this-module
  virtual AAFRESULT STDMETHODCALLTYPE
    %01 (/*%02*/ %04 .%03-indirection %05,
	  /*%07*/ %09 .%08-indirection %10);\\
\\\#endm
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes three arguments.
#c
#c Macro Arg 01: method name
#c
#c Macro arguments 02+:
#c 
#c meth arg #   arg modfrs   obj style   type    name    arg cmnt
#c ----------   ----------   ---------   ----    ----    --------
#c metharg 1    02           03          04      05      06
#c metharg 2    07           08          09      10      11
#c metharg 3    12           13          14      15      16
#c
#c Macro Arg 17: method description
#c
#startm AD_XMETHOD3 17
\\\#startm .method-%01 00
  // Override from .this-module
  virtual AAFRESULT STDMETHODCALLTYPE
    %01 (/*%02*/ %04 .%03-indirection %05,
	  /*%07*/ %09 .%08-indirection %10,
	  /*%12*/ %14 .%13-indirection %15);\\
\\\#endm
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes four arguments.
#c
#c Macro Arg 01: method name
#c
#c Macro arguments 02+:
#c 
#c meth arg #   arg modfrs   obj style   type    name    arg cmnt
#c ----------   ----------   ---------   ----    ----    --------
#c metharg 1    02           03          04      05      06
#c metharg 2    07           08          09      10      11
#c metharg 3    12           13          14      15      16
#c metharg 4    17           18          19      20      21
#c
#c Macro Arg 22: method description
#c
#startm AD_XMETHOD4 22
\\\#startm .method-%01 00
  // Override from .this-module
  virtual AAFRESULT STDMETHODCALLTYPE
    %01 (/*%02*/ %04 .%03-indirection %05,
	  /*%07*/ %09 .%08-indirection %10,
	  /*%12*/ %14 .%13-indirection %15,
	  /*%17*/ %19 .%18-indirection %20);\\
\\\#endm
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes five arguments.
#c
#c Macro Arg 01: method name
#c
#c Macro arguments 02+:
#c 
#c meth arg #   arg modfrs   obj style   type    name    arg cmnt
#c ----------   ----------   ---------   ----    ----    --------
#c metharg 1    02           03          04      05      06
#c metharg 2    07           08          09      10      11
#c metharg 3    12           13          14      15      16
#c metharg 4    17           18          19      20      21
#c metharg 5    22           23          24      25      26
#c
#c Macro Arg 27: method description
#c
#startm AD_XMETHOD5 27
\\\#startm .method-%01 00
  // Override from .this-module
  virtual AAFRESULT STDMETHODCALLTYPE
    %01 (/*%02*/ %04 .%03-indirection %05,
	  /*%07*/ %09 .%08-indirection %10,
	  /*%12*/ %14 .%13-indirection %15,
	  /*%17*/ %19 .%18-indirection %20,
	  /*%22*/ %24 .%23-indirection %25);\\
\\\#endm
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes six arguments.
#c
#c Macro Arg 01: method name
#c
#c Macro arguments 02+:
#c 
#c meth arg #   arg modfrs   obj style   type    name    arg cmnt
#c ----------   ----------   ---------   ----    ----    --------
#c metharg 1    02           03          04      05      06
#c metharg 2    07           08          09      10      11
#c metharg 3    12           13          14      15      16
#c metharg 4    17           18          19      20      21
#c metharg 5    22           23          24      25      26
#c metharg 6    27           28          29      30      31
#c
#c Macro Arg 32: method description
#c
#startm AD_XMETHOD6 32
\\\#startm .method-%01 00
  // Override from .this-module
  virtual AAFRESULT STDMETHODCALLTYPE
    %01 (/*%02*/ %04 .%03-indirection %05,
	  /*%07*/ %09 .%08-indirection %10,
	  /*%12*/ %14 .%13-indirection %15,
	  /*%17*/ %19 .%18-indirection %20,
	  /*%22*/ %24 .%23-indirection %25,
	  /*%27*/ %29 .%28-indirection %30);\\
\\\#endm
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes seven arguments.
#c
#c Macro Arg 01: method name
#c
#c Macro arguments 02+:
#c 
#c meth arg #   arg modfrs   obj style   type    name    arg cmnt
#c ----------   ----------   ---------   ----    ----    --------
#c metharg 1    02           03          04      05      06
#c metharg 2    07           08          09      10      11
#c metharg 3    12           13          14      15      16
#c metharg 4    17           18          19      20      21
#c metharg 5    22           23          24      25      26
#c metharg 6    27           28          29      30      31
#c metharg 7    32           33          34      35      36
#c
#c Macro Arg 37: method description
#c
#startm AD_XMETHOD7 37
\\\#startm .method-%01 00
  // Override from .this-module
  virtual AAFRESULT STDMETHODCALLTYPE
    %01 (/*%02*/ %04 .%03-indirection %05,
	  /*%07*/ %09 .%08-indirection %10,
	  /*%12*/ %14 .%13-indirection %15,
	  /*%17*/ %19 .%18-indirection %20,
	  /*%22*/ %24 .%23-indirection %25,
	  /*%27*/ %29 .%28-indirection %30,
	  /*%32*/ %34 .%33-indirection %35);\\
\\\#endm
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes eight arguments.
#c
#c Macro Arg 01: method name
#c
#c Macro arguments 02+:
#c 
#c meth arg #   arg modfrs   obj style   type    name    arg cmnt
#c ----------   ----------   ---------   ----    ----    --------
#c metharg 1    02           03          04      05      06
#c metharg 2    07           08          09      10      11
#c metharg 3    12           13          14      15      16
#c metharg 4    17           18          19      20      21
#c metharg 5    22           23          24      25      26
#c metharg 6    27           28          29      30      31
#c metharg 7    32           33          34      35      36
#c metharg 8    37           38          39      40      41
#c
#c Macro Arg 42: method description
#c
#startm AD_XMETHOD8 42
\\\#startm .method-%01 00
  // Override from .this-module
  virtual AAFRESULT STDMETHODCALLTYPE
    %01 (/*%02*/ %04 .%03-indirection %05,
	  /*%07*/ %09 .%08-indirection %10,
	  /*%12*/ %14 .%13-indirection %15,
	  /*%17*/ %19 .%18-indirection %20,
	  /*%22*/ %24 .%23-indirection %25,
	  /*%27*/ %29 .%28-indirection %30,
	  /*%32*/ %34 .%33-indirection %35,
	  /*%37*/ %39 .%38-indirection %40);\\
\\\#endm
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes nine arguments.
#c
#c Macro Arg 01: method name
#c
#c Macro arguments 02+:
#c 
#c meth arg #   arg modfrs   obj style   type    name    arg cmnt
#c ----------   ----------   ---------   ----    ----    --------
#c metharg 1    02           03          04      05      06
#c metharg 2    07           08          09      10      11
#c metharg 3    12           13          14      15      16
#c metharg 4    17           18          19      20      21
#c metharg 5    22           23          24      25      26
#c metharg 6    27           28          29      30      31
#c metharg 7    32           33          34      35      36
#c metharg 8    37           38          39      40      41
#c metharg 9    42           43          44      45      46
#c
#c Macro Arg 47: method description
#c
#startm AD_XMETHOD9 47
\\\#startm .method-%01 00
  // Override from .this-module
  virtual AAFRESULT STDMETHODCALLTYPE
    %01 (/*%02*/ %04 .%03-indirection %05,
	  /*%07*/ %09 .%08-indirection %10,
	  /*%12*/ %14 .%13-indirection %15,
	  /*%17*/ %19 .%18-indirection %20,
	  /*%22*/ %24 .%23-indirection %25,
	  /*%27*/ %29 .%28-indirection %30,
	  /*%32*/ %34 .%33-indirection %35,
	  /*%37*/ %39 .%38-indirection %40,
	  /*%42*/ %44 .%43-indirection %45);\\
\\\#endm
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes ten arguments.
#c
#c Macro Arg 01: method name
#c
#c Macro arguments 02+:
#c 
#c meth arg #   arg modfrs   obj style   type    name    arg cmnt
#c ----------   ----------   ---------   ----    ----    --------
#c metharg 1    02           03          04      05      06
#c metharg 2    07           08          09      10      11
#c metharg 3    12           13          14      15      16
#c metharg 4    17           18          19      20      21
#c metharg 5    22           23          24      25      26
#c metharg 6    27           28          29      30      31
#c metharg 7    32           33          34      35      36
#c metharg 8    37           38          39      40      41
#c metharg 9    42           43          44      45      46
#c metharg 10   47           48          49      50      51
#c
#c Macro Arg 52: method description
#c
#startm AD_XMETHOD_10 52
\\\#startm .method-%01 00
  // Override from .this-module
  virtual AAFRESULT STDMETHODCALLTYPE
    %01 (/*%02*/ %04 .%03-indirection %05,
	  /*%07*/ %09 .%08-indirection %10,
	  /*%12*/ %14 .%13-indirection %15,
	  /*%17*/ %19 .%18-indirection %20,
	  /*%22*/ %24 .%23-indirection %25,
	  /*%27*/ %29 .%28-indirection %30,
	  /*%32*/ %34 .%33-indirection %35,
	  /*%37*/ %39 .%38-indirection %40,
	  /*%42*/ %44 .%43-indirection %45,
	  /*%47*/ %49 .%48-indirection %50);\\
\\\#endm
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes eleven arguments.
#c
#c Macro Arg 01: method name
#c
#c Macro arguments 02+:
#c 
#c meth arg #   arg modfrs   obj style   type    name    arg cmnt
#c ----------   ----------   ---------   ----    ----    --------
#c metharg 1    02           03          04      05      06
#c metharg 2    07           08          09      10      11
#c metharg 3    12           13          14      15      16
#c metharg 4    17           18          19      20      21
#c metharg 5    22           23          24      25      26
#c metharg 6    27           28          29      30      31
#c metharg 7    32           33          34      35      36
#c metharg 8    37           38          39      40      41
#c metharg 9    42           43          44      45      46
#c metharg 10   47           48          49      50      51
#c metharg 11   52           53          54      55      56
#c
#c Macro Arg 57: method description
#c
#startm AD_XMETHOD_11 57
\\\#startm .method-%01 00
  // Override from .this-module
  virtual AAFRESULT STDMETHODCALLTYPE
    %01 (/*%02*/ %04 .%03-indirection %05,
	  /*%07*/ %09 .%08-indirection %10,
	  /*%12*/ %14 .%13-indirection %15,
	  /*%17*/ %19 .%18-indirection %20,
	  /*%22*/ %24 .%23-indirection %25,
	  /*%27*/ %29 .%28-indirection %30,
	  /*%32*/ %34 .%33-indirection %35,
	  /*%37*/ %39 .%38-indirection %40,
	  /*%42*/ %44 .%43-indirection %45,
	  /*%47*/ %49 .%48-indirection %50,
	  /*%52*/ %54 .%53-indirection %55);\\
\\\#endm
#endm


#ccccccccccccccccccccccccccc
#c
#c Ends a class definition
#c
#c Arguments: none
#c
#startm AD_CLASS_END 00
#endm


#ccccccccccccccccccccccccccc
#c
#c Ends a class definition
#c
#c Arguments: none
#c
#startm AD_ROOT_CLASS_END 00
#endm


#ccccccccccccccccccccccccccc
#c
#c Specifies an overridden method
#c
#c Argument: method declaration
#c
#startm AD_OVERRIDE 01
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a constructor which takes one argument.
#c Constructor name is assumed to be .this-module.
#c
#c Macro arguments 01+:
#c 
#c meth arg #   arg modfrs   obj style   type    name    arg cmnt
#c ----------   ----------   ---------   ----    ----    --------
#c metharg 1    01           02          03      04      05
#c
#c Macro Arg 06: method description
#c
#startm AD_XCONSTRUCTOR1 06
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a constructor which takes two arguments.
#c Constructor name is assumed to be .this-module.
#c
#c Macro arguments 01+:
#c 
#c meth arg #   arg modfrs   obj style   type    name    arg cmnt
#c ----------   ----------   ---------   ----    ----    --------
#c metharg 1    01           02          03      04      05
#c metharg 2    06           07          08      09      10
#c
#c Macro Arg 11: method description
#c
#startm AD_XCONSTRUCTOR2 11
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a constructor which takes three arguments.
#c Constructor name is assumed to be .this-module.
#c
#c Macro arguments 01+:
#c 
#c meth arg #   arg modfrs   obj style   type    name    arg cmnt
#c ----------   ----------   ---------   ----    ----    --------
#c metharg 1    01           02          03      04      05
#c metharg 2    06           07          08      09      10
#c metharg 3    11           12          13      14      15
#c
#c Macro Arg 16: method description
#c
#startm AD_XCONSTRUCTOR3 16
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a constructor which takes four arguments.
#c Constructor name is assumed to be .this-module.
#c
#c Macro arguments 01+:
#c 
#c meth arg #   arg modfrs   obj style   type    name    arg cmnt
#c ----------   ----------   ---------   ----    ----    --------
#c metharg 1    01           02          03      04      05
#c metharg 2    06           07          08      09      10
#c metharg 3    11           12          13      14      15
#c metharg 4    16           17          18      19      20
#c
#c Macro Arg 21: method description
#c
#startm AD_XCONSTRUCTOR4 21
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes one argument, which is
#c a pointer to an AAF object which is to be returned to the caller.
#c This is different from the normal METHOD macro because the
#c _rep will probably have the object in a different form.
#c
#c Argument1: method name
#c Argument2: argument modifiers (e.g. [in])
#c Argument3: argument type
#c Argument4: argument name
#c Argument5: argument comment
#c Argument6: method description
#c
#c NOTE!!! This macro takes as type, the object itself, not the
#c pointer to it.  The indirection will be added by the macro
#c expansion.
#c
#startm AD_GETOBJ_METHOD1 06
\\\#startm .method-%01 00
  // Override from .this-module
  virtual AAFRESULT STDMETHODCALLTYPE
    %01 (/*%02*/ %03 %04);\\
\\\#endm
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes one argument, which is
#c a pointer to an AAF object which is to be passed in from the caller.
#c This is different from the normal METHOD macro because the
#c _rep will probably have the object in a different form.
#c
#c NOTE!!! This macro takes as type, the object itself, not the
#c pointer to it.  The indirection will be added by the macro
#c expansion.
#c
#c Argument1: method name
#c Argument2: argument modifiers (e.g. [in])
#c Argument3: argument type
#c Argument4: argument name
#c Argument5: argument comment
#c Argument6: method description
#c
#startm AD_SETOBJ_METHOD1 06
\\\#startm .method-%01 00
  // Override from .this-module
  virtual AAFRESULT STDMETHODCALLTYPE
    %01 (/*%02*/ %03 %04);\\
\\\#endm
#endm
