#c /******************************************\
#c *                                          *
#c * Advanced Authoring Format                *
#c *                                          *
#c * Copyright (c) 1998 Avid Technology, Inc. *
#c * Copyright (c) 1998 Microsoft Corporation *
#c *                                          *
#c \******************************************/



#ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
#c
#c AutoDodo macro file for use in generating C++ API implementation
#c files.
#c
#ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc


#ccccccccccccccccccccccccccc
#c
#c Includes another file.
#c
#c Argument: Base filename
#c
#c Note: it is not necessary to expand it here, since it was already
#c included in this module's header file.
#c
#startm AD_INCLUDE 01
#endm


#ccccccccccccccccccccccccccc
#c
#c Goes at the head of the file.
#c
#c Arguments: none
#c
#startm AD_HEAD 00
#endm

#ccccccccccccccccccccccccccc
#c
#c Types definitions should only be used by idl and c++ & impl headers
#c 
#c Argument: Pieces of UUID
#c
#c Example:
#c AD_TYPES_BEGIN(b1a21372, 1a7d, 11d2, bf, 78, 00, 10, 4b, c9, 15, 6d)
#c
#startm AD_TYPES_BEGIN 11
#endm


#ccccccccccccccccccccccccccc
#c
#c Ends a types definition
#c
#c Types definitions should only be used by idl and c++ & impl headers
#c
#c Arguments: none
#c
#startm AD_TYPES_END 00
#endm


#ccccccccccccccccccccccccccc
#c
#c Argument1: base name to be converted to output type.
#c
#startm AD_AAFTYPES 01
Impl%01\
#endm


#ccccccccccccccccccccccccccc
#c
#c Argument1: base name to be converted to output type.
#c
#startm AD_DECLARE_FORWARD_AAFTYPES 01
#endm

#ccccccccccccccccccccccccccc
#c
#c Argument1: text to be quoted.
#c 
#c Ignore input this was already processed in the header file. 
#c
#startm AD_CPP_QUOTE 01
#endm

#ccccccccccccccccccccccccccc
#c
#c Generate a forward declaration of a class.
#c
#c Argument: class name
#c
#startm AD_FORWARD_DECLARATION 01
#ifndef _Impl%01_h_
#include "Impl%01.h"
#endif
#endm

#ccccccccccccccccccccccccccc
#c
#c Class UUID.
#c
#c Argument: Pieces of UUID
#c
#startm AD_CLASS_UUID 11
#endm

#ccccccccccccccccccccccccccc
#c
#c Default UUID.
#c
#c Argument: Pieces of UUID
#c
#startm AD_DEFAULT_UUID 11
#endm

#ccccccccccccccccccccccccccc
#c
#c Starts a class definition
#c
#c Arguments: none
#c
#startm AD_CLASS_BEGIN 00
#ifndef _Impl.this-module_h_
#include "Impl.this-module.h"
#endif

#ifndef _.this-module_h_
#include ".this-module.h"
#endif

#include <assert.h>


Impl.this-module::Impl.this-module ()
{}


Impl.this-module::~Impl.this-module ()
{}
#endm


#ccccccccccccccccccccccccccc
#c
#c Starts a class definition with no parent class
#c
#c Arguments: none
#c
#startm AD_ROOT_CLASS_BEGIN 00
#ifndef _Impl.this-module_h_
#include "Impl.this-module.h"
#endif

#include <assert.h>


Impl.this-module::Impl.this-module ()
: _pComParent (0),
  _pCppParent (0)
{}


Impl.this-module::~Impl.this-module ()
{}


void Impl.this-module::InitComParent (IAAFObject * pComParent)
{
  assert (! _pComParent);
  _pComParent = pComParent;
  assert (_pComParent);
  assert (! _pCppParent);
}


void Impl.this-module::InitCppParent (AAFObject * pCppParent)
{
  assert (! _pCppParent);
  _pCppParent = pCppParent;
  assert (_pCppParent);
  assert (! _pComParent);
}
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes no arguments.
#c
#c Argument1: method name
#c Argument2: method description
#c
#startm AD_METHOD0 02
AAFRESULT STDMETHODCALLTYPE
    Impl.this-module::%01 ()
{
  return AAFRESULT_NOT_IMPLEMENTED;
}
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes one argument.
#c
#c Argument1: method name
#c Argument2: argument modifiers (e.g. [in])
#c Argument3: argument type
#c Argument4: argument name
#c Argument5: argument comment
#c Argument6: method description
#c
#startm AD_METHOD1 06
AAFRESULT STDMETHODCALLTYPE
    Impl.this-module::%01 (%03 /*%04*/)
{
  return AAFRESULT_NOT_IMPLEMENTED;
}
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes two arguments.
#c
#c Argument1: method name
#c Argument2: argument modifiers (e.g. [in])
#c Argument3: argument type
#c Argument4: argument name
#c Argument5: argument comment
#c Argument6: argument modifiers (e.g. [in])
#c Argument7: argument type
#c Argument8: argument name
#c Argument9: argument comment
#c Argument10: method description
#c
#startm AD_METHOD2 10
AAFRESULT STDMETHODCALLTYPE
    Impl.this-module::%01 (%03 /*%04*/,
                           %07 /*%08*/)
{
  return AAFRESULT_NOT_IMPLEMENTED;
}
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes three arguments.
#c
#c Argument1: method name
#c Argument2: argument modifiers (e.g. [in])
#c Argument3: argument type
#c Argument4: argument name
#c Argument5: argument comment
#c Argument6: argument modifiers (e.g. [in])
#c Argument7: argument type
#c Argument8: argument name
#c Argument9: argument comment
#c Argument10: argument modifiers (e.g. [in])
#c Argument11: argument type
#c Argument12: argument name
#c Argument13: argument comment
#c Argument14: method description
#c
#startm AD_METHOD3 14
AAFRESULT STDMETHODCALLTYPE
    Impl.this-module::%01 (%03 /*%04*/,
                           %07 /*%08*/,
                           %11, /*%12*/)
{
  return AAFRESULT_NOT_IMPLEMENTED;
}
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes four arguments.
#c
#c Argument1: method name
#c Argument2: argument modifiers (e.g. [in])
#c Argument3: argument type
#c Argument4: argument name
#c Argument5: argument comment
#c Argument6: argument modifiers (e.g. [in])
#c Argument7: argument type
#c Argument8: argument name
#c Argument9: argument comment
#c Argument10: argument modifiers (e.g. [in])
#c Argument11: argument type
#c Argument12: argument name
#c Argument13: argument comment
#c Argument14: argument modifiers (e.g. [in])
#c Argument15: argument type
#c Argument16: argument name
#c Argument17: argument comment
#c Argument18: method description
#c
#startm AD_METHOD4 18
AAFRESULT STDMETHODCALLTYPE
    Impl.this-module::%01 (%03 /*%04*/,
                           %07 /*%08*/,
                           %11 /*%12*/,
                           %15 /*%16*/)
{
  return AAFRESULT_NOT_IMPLEMENTED;
}
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes five arguments.
#c
#c Argument1: method name
#c Argument2: argument modifiers (e.g. [in])
#c Argument3: argument type
#c Argument4: argument name
#c Argument5: argument comment
#c Argument6: argument modifiers (e.g. [in])
#c Argument7: argument type
#c Argument8: argument name
#c Argument9: argument comment
#c Argument10: argument modifiers (e.g. [in])
#c Argument11: argument type
#c Argument12: argument name
#c Argument13: argument comment
#c Argument14: argument modifiers (e.g. [in])
#c Argument15: argument type
#c Argument16: argument name
#c Argument17: argument comment
#c Argument18: argument modifiers (e.g. [in])
#c Argument19: argument type
#c Argument20: argument name
#c Argument21: argument comment
#c Argument22: method description
#c
#startm AD_METHOD5 22
AAFRESULT STDMETHODCALLTYPE
    Impl.this-module::%01 (%03 /*%04*/,
                           %07 /*%08*/,
                           %11 /*%12*/,
                           %15 /*%16*/,
                           %19 /*%20*/)
{
  return AAFRESULT_NOT_IMPLEMENTED;
}
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes six arguments.
#c
#c Argument1: method name
#c Argument2: argument modifiers (e.g. [in])
#c Argument3: argument type
#c Argument4: argument name
#c Argument5: argument comment
#c Argument6: argument modifiers (e.g. [in])
#c Argument7: argument type
#c Argument8: argument name
#c Argument9: argument comment
#c Argument10: argument modifiers (e.g. [in])
#c Argument11: argument type
#c Argument12: argument name
#c Argument13: argument comment
#c Argument14: argument modifiers (e.g. [in])
#c Argument15: argument type
#c Argument16: argument name
#c Argument17: argument comment
#c Argument18: argument modifiers (e.g. [in])
#c Argument19: argument type
#c Argument20: argument name
#c Argument21: argument comment
#c Argument22: argument modifiers (e.g. [in])
#c Argument23: argument type
#c Argument24: argument name
#c Argument25: argument comment
#c Argument26: method description
#c
#startm AD_METHOD6 26
AAFRESULT STDMETHODCALLTYPE
    Impl.this-module::%01 (%03 /*%04*/,
                           %07 /*%08*/,
                           %11 /*%12*/,
                           %15 /*%16*/,
                           %19 /*%20*/,
                           %23 /*%24*/)
{
  return AAFRESULT_NOT_IMPLEMENTED;
}
#endm

#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes seven arguments.
#c
#c Argument1: method name
#c Argument2: argument modifiers (e.g. [in])
#c Argument3: argument type
#c Argument4: argument name
#c Argument5: argument comment
#c Argument6: argument modifiers (e.g. [in])
#c Argument7: argument type
#c Argument8: argument name
#c Argument9: argument comment
#c Argument10: argument modifiers (e.g. [in])
#c Argument11: argument type
#c Argument12: argument name
#c Argument13: argument comment
#c Argument14: argument modifiers (e.g. [in])
#c Argument15: argument type
#c Argument16: argument name
#c Argument17: argument comment
#c Argument18: argument modifiers (e.g. [in])
#c Argument19: argument type
#c Argument20: argument name
#c Argument21: argument comment
#c Argument22: argument modifiers (e.g. [in])
#c Argument23: argument type
#c Argument24: argument name
#c Argument25: argument comment
#c Argument26: argument modifiers (e.g. [in])
#c Argument27: argument type
#c Argument28: argument name
#c Argument29: argument comment
#c Argument30: method description
#c
#c TomR:980713: Added
#c
#startm AD_METHOD7 30
AAFRESULT STDMETHODCALLTYPE
    Impl.this-module::%01 (%03 /*%04*/,
                           %07 /*%08*/,
                           %11 /*%12*/,
                           %15 /*%16*/,
                           %19 /*%20*/,
                           %23 /*%24*/,
                           %27 /*%28*/)
{
  return AAFRESULT_NOT_IMPLEMENTED;
}
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes eight arguments.
#c
#c Argument1: method name
#c Argument2: argument modifiers (e.g. [in])
#c Argument3: argument type
#c Argument4: argument name
#c Argument5: argument comment
#c Argument6: argument modifiers (e.g. [in])
#c Argument7: argument type
#c Argument8: argument name
#c Argument9: argument comment
#c Argument10: argument modifiers (e.g. [in])
#c Argument11: argument type
#c Argument12: argument name
#c Argument13: argument comment
#c Argument14: argument modifiers (e.g. [in])
#c Argument15: argument type
#c Argument16: argument name
#c Argument17: argument comment
#c Argument18: argument modifiers (e.g. [in])
#c Argument19: argument type
#c Argument20: argument name
#c Argument21: argument comment
#c Argument22: argument modifiers (e.g. [in])
#c Argument23: argument type
#c Argument24: argument name
#c Argument25: argument comment
#c Argument26: argument modifiers (e.g. [in])
#c Argument27: argument type
#c Argument28: argument name
#c Argument29: argument comment
#c Argument30: argument modifiers (e.g. [in])
#c Argument31: argument type
#c Argument32: argument name
#c Argument33: argument comment
#c Argument34: method description
#c
#c TomR:980713: Added
#c
#startm AD_METHOD8 34
AAFRESULT STDMETHODCALLTYPE
    Impl.this-module::%01 (%03 /*%04*/,
                           %07 /*%08*/,
                           %11 /*%12*/,
                           %15 /*%16*/,
                           %19 /*%20*/,
                           %23 /*%24*/,
                           %27 /*%28*/,
                           %31 /*%32*/)
{
  return AAFRESULT_NOT_IMPLEMENTED;
}
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes nine arguments.
#c
#c Argument1: method name
#c Argument2: argument modifiers (e.g. [in])
#c Argument3: argument type
#c Argument4: argument name
#c Argument5: argument comment
#c Argument6: argument modifiers (e.g. [in])
#c Argument7: argument type
#c Argument8: argument name
#c Argument9: argument comment
#c Argument10: argument modifiers (e.g. [in])
#c Argument11: argument type
#c Argument12: argument name
#c Argument13: argument comment
#c Argument14: argument modifiers (e.g. [in])
#c Argument15: argument type
#c Argument16: argument name
#c Argument17: argument comment
#c Argument18: argument modifiers (e.g. [in])
#c Argument19: argument type
#c Argument20: argument name
#c Argument21: argument comment
#c Argument22: argument modifiers (e.g. [in])
#c Argument23: argument type
#c Argument24: argument name
#c Argument25: argument comment
#c Argument26: argument modifiers (e.g. [in])
#c Argument27: argument type
#c Argument28: argument name
#c Argument29: argument comment
#c Argument30: argument modifiers (e.g. [in])
#c Argument31: argument type
#c Argument32: argument name
#c Argument33: argument comment
#c Argument34: argument modifiers (e.g. [in])
#c Argument35: argument type
#c Argument36: argument name
#c Argument37: argument comment
#c Argument38: method description
#c
#startm AD_METHOD9 38
AAFRESULT STDMETHODCALLTYPE
    Impl.this-module::%01 (%03 /*%04*/,
                           %07 /*%08*/,
                           %11 /*%12*/,
                           %15 /*%16*/,
                           %19 /*%20*/,
                           %23 /*%24*/,
                           %27 /*%28*/,
                           %31 /*%32*/,
                           %35 /*%36*/)
{
  return AAFRESULT_NOT_IMPLEMENTED;
}
#endm

#ccccccccccccccccccccccccccc
#c
#c Ends a class definition
#c
#c Arguments: none
#c
#startm AD_CLASS_END 00
#endm


#ccccccccccccccccccccccccccc
#c
#c Ends a class definition
#c
#c Arguments: none
#c
#startm AD_ROOT_CLASS_END 00

IAAFObject * Impl.this-module::GetCOMParent ()
{
  assert (_pComParent);
  assert (! _pCppParent);
  return _pComParent;
}


AAFObject * Impl.this-module::GetCppParent ()
{
  assert (! _pComParent);
  assert (_pCppParent);
  return _pCppParent;
}
#endm


#ccccccccccccccccccccccccccc
#c
#c Specifies an overridden method
#c
#c Argument: method declaration
#c
#startm AD_OVERRIDE 01
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a constructor which takes one argument.
#c Constructor name is assumed to be Impl.this-module.
#c
#c Argument1: argument modifiers (e.g. [in])
#c Argument2: argument type
#c Argument3: argument name
#c Argument4: argument comment
#c Argument5: constructor description
#c
#startm AD_CONSTRUCTOR1 05
AAFRESULT STDMETHODCALLTYPE
    Impl.this-module::.this-module (%02 %03)
{}
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a constructor which takes two arguments.
#c Constructor name is assumed to be .this-module.
#c
#c Argument1: argument modifiers (e.g. [in])
#c Argument2: argument1 type
#c Argument3: argument1 name
#c Argument4: argument1 comment
#c Argument5: argument modifiers (e.g. [in])
#c Argument6: argument2 type
#c Argument7: argument2 name
#c Argument8: argument2 comment
#c Argument9: constructor description
#c
#startm AD_CONSTRUCTOR2 09
    Impl.this-module::.this-module (%02 %03,%06 %07)
{}
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a constructor which takes three arguments.
#c Constructor name is assumed to be .this-module.
#c
#c Argument1: argument1 modifiers (e.g. [in])
#c Argument2: argument1 type
#c Argument3: argument1 name
#c Argument4: argument1 comment
#c Argument5: argument2 modifiers (e.g. [in])
#c Argument6: argument2 type
#c Argument7: argument2 name
#c Argument8: argument2 comment
#c Argument9: argument3 modifiers (e.g. [in])
#c Argument10: argument3 type
#c Argument11: argument3 name
#c Argument12: argument3 comment
#c Argument13: constructor description
#c
#startm AD_CONSTRUCTOR3 13
    Impl.this-module::.this-module (%02 %03,
                                %06 %07,
                                %10 %11)
{}
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a constructor which takes four arguments.
#c Constructor name is assumed to be .this-module.
#c
#c Argument1: argument1 modifiers (e.g. [in])
#c Argument2: argument1 type
#c Argument3: argument1 name
#c Argument4: argument1 comment
#c Argument5: argument2 modifiers (e.g. [in])
#c Argument6: argument2 type
#c Argument7: argument2 name
#c Argument8: argument2 comment
#c Argument9: argument3 modifiers (e.g. [in])
#c Argument10: argument3 type
#c Argument11: argument3 name
#c Argument12: argument3 comment
#c Argument13: argument4 modifiers (e.g. [in])
#c Argument14: argument4 type
#c Argument15: argument4 name
#c Argument16: argument4 comment
#c Argument17: constructor description
#c
#startm AD_CONSTRUCTOR4 17
    Impl.this-module::.this-module (%02 %03,
                                %06 %07,
                                %10 %11,
                                %14 %15)
{}
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes one argument, which is
#c a pointer to an AAF object which is to be returned to the caller.
#c This is different from the normal METHOD macro because the
#c _rep will probably have the object in a different form.
#c
#c Argument1: method name
#c Argument2: argument modifiers (e.g. [in])
#c Argument3: argument type
#c Argument4: argument name
#c Argument5: argument comment
#c Argument6: method description
#c
#c NOTE!!! This macro takes as type, the object itself, not the
#c pointer to it.  The indirection will be added by the macro
#c expansion.
#c
#startm AD_GETOBJ_METHOD1 06
AAFRESULT STDMETHODCALLTYPE
    Impl.this-module::%01 (Impl%03 ** %04)
{
  return AAFRESULT_NOT_IMPLEMENTED;
}
#endm


#ccccccccccccccccccccccccccc
#c
#c Inserts declaration for a method which takes one argument, which is
#c a pointer to an AAF object which is to be passed in from the caller.
#c This is different from the normal METHOD macro because the
#c _rep will probably have the object in a different form.
#c
#c NOTE!!! This macro takes as type, the object itself, not the
#c pointer to it.  The indirection will be added by the macro
#c expansion.
#c
#c Argument1: method name
#c Argument2: argument modifiers (e.g. [in])
#c Argument3: argument type
#c Argument4: argument name
#c Argument5: argument comment
#c Argument6: method description
#c
#startm AD_SETOBJ_METHOD1 06
AAFRESULT STDMETHODCALLTYPE
    Impl.this-module::%01 (Impl%03 * %04)
{
  return AAFRESULT_NOT_IMPLEMENTED;
}
#endm
