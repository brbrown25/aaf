#ifndef __AAFFileSignatures_h__
#define __AAFFileSignatures_h__
//=---------------------------------------------------------------------=
//
// The contents of this file are subject to the AAF SDK Public
// Source License Agreement (the "License"); You may not use this file
// except in compliance with the License.  The License is available in
// AAFSDKPSL.TXT, or you may obtain a copy of the License from the AAF
// Association or its successor.
// 
// Software distributed under the License is distributed on an "AS IS"
// basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
// the License for the specific language governing rights and limitations
// under the License.
// 
// The Original Code of this file is Copyright 1998-2001, Licensor of the
// AAF Association.
// 
// The Initial Developer of the Original Code of this file and the
// Licensor of the AAF Association is Avid Technology.
// All rights reserved.
//
//=---------------------------------------------------------------------=

#ifndef __AAFTypes_h__
#include "AAFTypes.h"
#endif

// AAF (and MXF) file signatures as byte streams.

const aafInt8 aafObjectModelDevelopmentVersion = 0;

// Development versions start at -1 and count down. Version 0
// indicates a released version.

// If you change aafObjectModelDevelopmentVersion above you must also
// change the signatures below (a program is available).

// The aafObjectModelDevelopmentVersion appears in the signatures as
// follows
//   - Byte 13 of the binary signatures.
//   - Bytes 73 (most significant) and 74 (least significant) of
//     the text signatures.

// AAF files encoded as structured storage (binary).
//
const aafUInt8 aafFileSignatureAafSSBinary[] = {
  0xd0, 0xcf, 0x11, 0xe0, 0xa1, 0xb1, 0x1a, 0xe1,
  0x41, 0x41, 0x46, 0x42, 0x0d, 0x00, 0x4f, 0x4d,
  0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0xff
};

// MXF files encoded as structured storage (binary).
//
const aafUInt8 aafFileSignatureMxfSSBinary[] = {
  0xd0, 0xcf, 0x11, 0xe0, 0xa1, 0xb1, 0x1a, 0xe1,
  0x4d, 0x58, 0x46, 0x42, 0x0d, 0x00, 0x4f, 0x4d,
  0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0xff
};

// AAF files encoded as XML (text).
//
const aafUInt8 aafFileSignatureAafXmlText[] = {
  0x3c, 0x3f, 0x78, 0x6d, 0x6c, 0x20, 0x76, 0x65,
  0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3d, 0x22, 0x31,
  0x2e, 0x30, 0x22, 0x3f, 0x3e, 0x3c, 0x3f, 0x41,
  0x41, 0x46, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x61,
  0x74, 0x75, 0x72, 0x65, 0x3d, 0x22, 0x7b, 0x35,
  0x38, 0x34, 0x36, 0x34, 0x31, 0x34, 0x31, 0x2d,
  0x46, 0x46, 0x30, 0x44, 0x2d, 0x34, 0x44, 0x34,
  0x46, 0x2d, 0x30, 0x36, 0x30, 0x45, 0x2d, 0x32,
  0x42, 0x33, 0x34, 0x30, 0x31, 0x30, 0x31, 0x30,
  0x31, 0x30, 0x30, 0x7d, 0x22, 0x3f, 0x3e
};

// MXF files encoded as XML (text).
//
const aafUInt8 aafFileSignatureMxfXmlText[] = {
  0x3c, 0x3f, 0x78, 0x6d, 0x6c, 0x20, 0x76, 0x65,
  0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3d, 0x22, 0x31,
  0x2e, 0x30, 0x22, 0x3f, 0x3e, 0x3c, 0x3f, 0x41,
  0x41, 0x46, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x61,
  0x74, 0x75, 0x72, 0x65, 0x3d, 0x22, 0x7b, 0x35,
  0x38, 0x34, 0x36, 0x35, 0x38, 0x34, 0x44, 0x2d,
  0x46, 0x46, 0x30, 0x44, 0x2d, 0x34, 0x44, 0x34,
  0x46, 0x2d, 0x30, 0x36, 0x30, 0x45, 0x2d, 0x32,
  0x42, 0x33, 0x34, 0x30, 0x31, 0x30, 0x31, 0x30,
  0x31, 0x30, 0x30, 0x7d, 0x22, 0x3f, 0x3e
};

// AAF files encoded as SMPTE KLV (binary).
//
const aafUInt8 aafFileSignatureAafKlvBinary[] = {
  0xd0, 0xcf, 0x11, 0xe0, 0xa1, 0xb1, 0x1a, 0xe1,
  0x41, 0x41, 0x46, 0x4b, 0x0d, 0x00, 0x4f, 0x4d,
  0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0xff
};

// MXF files encoded as SMPTE KLV (binary).
//
const aafUInt8 aafFileSignatureMxfKlvBinary[] = {
  0xd0, 0xcf, 0x11, 0xe0, 0xa1, 0xb1, 0x1a, 0xe1,
  0x4d, 0x58, 0x46, 0x4b, 0x0d, 0x00, 0x4f, 0x4d,
  0x06, 0x0e, 0x2b, 0x34, 0x01, 0x01, 0x01, 0xff
};

#endif // !__AAFFileSignatures_h__
